{
  "reportTitle": "OData V4 Server",
  "stats": {
    "suites": 3,
    "tests": 38,
    "passes": 38,
    "pending": 0,
    "failures": 0,
    "start": "2016-10-28T14:44:46.876Z",
    "end": "2016-10-28T14:44:47.390Z",
    "duration": 514,
    "testsRegistered": 38,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "ODataServer",
        "suites": [
          {
            "title": "OData CRUD",
            "suites": [],
            "tests": [
              {
                "title": "should return entity set result (GET /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result (GET /EntitySet)",
                "timedOut": false,
                "duration": 89,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "cdf9e03c-7460-4104-8fbb-a90eb19a6a6c",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "eadb5130-a6dd-4fcf-8220-a18be5a4b546",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity set result using async function (GET /AsyncEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "289bcabc-fdc4-4266-90f5-9e18f24def05",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "fullTitle": "ODataServer OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "d8c107ee-a1eb-4b96-9127-b7ee036a209f",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity by key (GET /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should return entity by key (GET /EntitySet(1))",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "82a98562-3b36-4761-9884-da67a467dc4a",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should insert new entity (POST /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should insert new entity (POST /EntitySet)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "c3ad0f4b-5ae5-4ef8-8a0a-2456558ceb86",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should update entity (PUT /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity (PUT /EntitySet(1))",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "0d4a3692-861d-4536-bffc-1e9b815bcb72",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should update entity using delta (PATCH /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity using delta (PATCH /EntitySet(1))",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "8bb05c5a-3e5e-4d6f-9281-2bb8462a12b5",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should delete entity (DELETE /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should delete entity (DELETE /EntitySet(1))",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "31b02f33-a281-4344-bb28-ff59e49e5890",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return result count (GET /EntitySet/$count)",
                "fullTitle": "ODataServer OData CRUD should return result count (GET /EntitySet/$count)",
                "timedOut": false,
                "duration": 29,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "98f261c3-2a1e-4d19-8406-283286c24fca",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity property (GET /EntitySet(1)/foo)",
                "fullTitle": "ODataServer OData CRUD should return entity property (GET /EntitySet(1)/foo)",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "cb7e29c3-b4f3-48d0-9b68-0aa978a0fa0b",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "fcff0948-ece0-4209-a818-d0559bf535ff",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity value (GET /EntitySet(1)/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity value (GET /EntitySet(1)/$value)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "8c53b9c1-b028-4414-a5ee-0fcbeb723237",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call action import (POST /ActionImport)",
                "fullTitle": "ODataServer OData CRUD should call action import (POST /ActionImport)",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "1f89b1f9-1255-4c62-8ede-57335f156a11",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call action import with parameters (POST /ActionImportParams)",
                "fullTitle": "ODataServer OData CRUD should call action import with parameters (POST /ActionImportParams)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "c3fca684-bcd6-4541-98a8-b0733bffd42b",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call function import (GET /FunctionImport(value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import (GET /FunctionImport(value=42))",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "92eafc33-a878-45af-ad62-61867fed85c3",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "4302d1b5-05f9-4062-b0ac-f93253d1d811",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "7b5d7d76-2a7d-4d07-a9c7-158ea61e9fbf",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "46505dbb-bacd-4408-8723-7244e734ae38",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "af6596fb-ee39-4e63-8473-ea7507b8933f",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "fullTitle": "ODataServer OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "d79bb6c2-2ddf-4afe-9db0-1c1a79ae0bbc",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "fullTitle": "ODataServer OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "817859e2-3f7d-4f76-a6b8-d2cfb3126930",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "fullTitle": "ODataServer OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "ad0e4fa3-b696-493e-9556-c2fa5a8bf779",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "fullTitle": "ODataServer OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "9f21cd2d-a7ba-45ee-a89f-8b0466598bd1",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "fullTitle": "ODataServer OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "09386e1c-b3c3-4d34-b409-a1eb851a5c82",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "63f954a5-bbb2-4211-be2b-e51564ef0c57",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "0144f071-6543-44c9-880f-b8873ce6c324",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "4eb8cad9-99e7-43ca-8a21-fb8667179ca9",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "36cb1a40-11cf-457c-9b27-f3d9b3c7a67c",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "timedOut": false,
                "duration": 43,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "b3acc8ec-255c-4af0-8acc-ca9b66d8e5d0",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "timedOut": false,
                "duration": 20,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "0b64485d-d066-4654-bd5b-a1559525eacd",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "21ff9266-f74c-4f8c-a4b4-ad3eea345a13",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "fullTitle": "ODataServer OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "bae34b74-61a0-4d1e-88a1-9ba6097138b9",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return result including complex type (GET /Users)",
                "fullTitle": "ODataServer OData CRUD should return result including complex type (GET /Users)",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "be69eae7-b66c-4c6e-8466-511749f009ed",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return complex type property (GET /Users(1)/Location)",
                "fullTitle": "ODataServer OData CRUD should return complex type property (GET /Users(1)/Location)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "45a4d0b7-4f1f-46b9-9253-0f9835596848",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\build\\test\\server.spec.js",
            "uuid": "68e9697c-1637-47f7-b051-133b1b763754",
            "fullFile": "C:\\inetpub\\wwwroot\\odata-v4-server\\build\\test\\server.spec.js",
            "passes": [
              {
                "title": "should return entity set result (GET /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result (GET /EntitySet)",
                "timedOut": false,
                "duration": 89,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "cdf9e03c-7460-4104-8fbb-a90eb19a6a6c",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "eadb5130-a6dd-4fcf-8220-a18be5a4b546",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity set result using async function (GET /AsyncEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "289bcabc-fdc4-4266-90f5-9e18f24def05",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "fullTitle": "ODataServer OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "d8c107ee-a1eb-4b96-9127-b7ee036a209f",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity by key (GET /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should return entity by key (GET /EntitySet(1))",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "82a98562-3b36-4761-9884-da67a467dc4a",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should insert new entity (POST /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should insert new entity (POST /EntitySet)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "c3ad0f4b-5ae5-4ef8-8a0a-2456558ceb86",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should update entity (PUT /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity (PUT /EntitySet(1))",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "0d4a3692-861d-4536-bffc-1e9b815bcb72",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should update entity using delta (PATCH /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity using delta (PATCH /EntitySet(1))",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "8bb05c5a-3e5e-4d6f-9281-2bb8462a12b5",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should delete entity (DELETE /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should delete entity (DELETE /EntitySet(1))",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "31b02f33-a281-4344-bb28-ff59e49e5890",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return result count (GET /EntitySet/$count)",
                "fullTitle": "ODataServer OData CRUD should return result count (GET /EntitySet/$count)",
                "timedOut": false,
                "duration": 29,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "98f261c3-2a1e-4d19-8406-283286c24fca",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity property (GET /EntitySet(1)/foo)",
                "fullTitle": "ODataServer OData CRUD should return entity property (GET /EntitySet(1)/foo)",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "cb7e29c3-b4f3-48d0-9b68-0aa978a0fa0b",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "fcff0948-ece0-4209-a818-d0559bf535ff",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity value (GET /EntitySet(1)/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity value (GET /EntitySet(1)/$value)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "8c53b9c1-b028-4414-a5ee-0fcbeb723237",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call action import (POST /ActionImport)",
                "fullTitle": "ODataServer OData CRUD should call action import (POST /ActionImport)",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "1f89b1f9-1255-4c62-8ede-57335f156a11",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call action import with parameters (POST /ActionImportParams)",
                "fullTitle": "ODataServer OData CRUD should call action import with parameters (POST /ActionImportParams)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "c3fca684-bcd6-4541-98a8-b0733bffd42b",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call function import (GET /FunctionImport(value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import (GET /FunctionImport(value=42))",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "92eafc33-a878-45af-ad62-61867fed85c3",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "4302d1b5-05f9-4062-b0ac-f93253d1d811",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "7b5d7d76-2a7d-4d07-a9c7-158ea61e9fbf",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "46505dbb-bacd-4408-8723-7244e734ae38",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "af6596fb-ee39-4e63-8473-ea7507b8933f",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "fullTitle": "ODataServer OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "d79bb6c2-2ddf-4afe-9db0-1c1a79ae0bbc",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "fullTitle": "ODataServer OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "817859e2-3f7d-4f76-a6b8-d2cfb3126930",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "fullTitle": "ODataServer OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "ad0e4fa3-b696-493e-9556-c2fa5a8bf779",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "fullTitle": "ODataServer OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "9f21cd2d-a7ba-45ee-a89f-8b0466598bd1",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "fullTitle": "ODataServer OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "09386e1c-b3c3-4d34-b409-a1eb851a5c82",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "63f954a5-bbb2-4211-be2b-e51564ef0c57",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "0144f071-6543-44c9-880f-b8873ce6c324",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "4eb8cad9-99e7-43ca-8a21-fb8667179ca9",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "36cb1a40-11cf-457c-9b27-f3d9b3c7a67c",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "timedOut": false,
                "duration": 43,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "b3acc8ec-255c-4af0-8acc-ca9b66d8e5d0",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "timedOut": false,
                "duration": 20,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "0b64485d-d066-4654-bd5b-a1559525eacd",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "21ff9266-f74c-4f8c-a4b4-ad3eea345a13",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "fullTitle": "ODataServer OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "bae34b74-61a0-4d1e-88a1-9ba6097138b9",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return result including complex type (GET /Users)",
                "fullTitle": "ODataServer OData CRUD should return result including complex type (GET /Users)",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "be69eae7-b66c-4c6e-8466-511749f009ed",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              },
              {
                "title": "should return complex type property (GET /Users(1)/Location)",
                "fullTitle": "ODataServer OData CRUD should return complex type property (GET /Users(1)/Location)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "45a4d0b7-4f1f-46b9-9253-0f9835596848",
                "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 35,
            "totalPasses": 35,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 358
          },
          {
            "title": "Code coverage",
            "suites": [],
            "tests": [
              {
                "title": "should return empty object when no public controllers on server",
                "fullTitle": "ODataServer Code coverage should return empty object when no public controllers on server",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.deepEqual(index_1.odata.getPublicControllers(NoServer), {});",
                "isRoot": false,
                "uuid": "51e8e0d1-caa4-4ee8-ad2c-464b98c65138",
                "parentUUID": "7a71b934-43e0-4938-a959-e6631ab8e65d",
                "skipped": false
              },
              {
                "title": "should not allow non-OData methods",
                "fullTitle": "ODataServer Code coverage should not allow non-OData methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">try</span> {<br>    NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>);<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}<br><span class=\"hljs-keyword\">catch</span> (err) {<br>    assert.equal(err.message, <span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>}",
                "isRoot": false,
                "uuid": "136329f4-b624-4a61-8ed2-bb54c1b521eb",
                "parentUUID": "7a71b934-43e0-4938-a959-e6631ab8e65d",
                "skipped": false
              },
              {
                "title": "should throw resource not found error",
                "fullTitle": "ODataServer Code coverage should throw resource not found error",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    assert.equal(err.message, <span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
                "isRoot": false,
                "uuid": "109726cc-cdd6-4ee6-bb0d-5881527fd689",
                "parentUUID": "7a71b934-43e0-4938-a959-e6631ab8e65d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\build\\test\\server.spec.js",
            "uuid": "7a71b934-43e0-4938-a959-e6631ab8e65d",
            "fullFile": "C:\\inetpub\\wwwroot\\odata-v4-server\\build\\test\\server.spec.js",
            "passes": [
              {
                "title": "should return empty object when no public controllers on server",
                "fullTitle": "ODataServer Code coverage should return empty object when no public controllers on server",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.deepEqual(index_1.odata.getPublicControllers(NoServer), {});",
                "isRoot": false,
                "uuid": "51e8e0d1-caa4-4ee8-ad2c-464b98c65138",
                "parentUUID": "7a71b934-43e0-4938-a959-e6631ab8e65d",
                "skipped": false
              },
              {
                "title": "should not allow non-OData methods",
                "fullTitle": "ODataServer Code coverage should not allow non-OData methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">try</span> {<br>    NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>);<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}<br><span class=\"hljs-keyword\">catch</span> (err) {<br>    assert.equal(err.message, <span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>}",
                "isRoot": false,
                "uuid": "136329f4-b624-4a61-8ed2-bb54c1b521eb",
                "parentUUID": "7a71b934-43e0-4938-a959-e6631ab8e65d",
                "skipped": false
              },
              {
                "title": "should throw resource not found error",
                "fullTitle": "ODataServer Code coverage should throw resource not found error",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    assert.equal(err.message, <span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
                "isRoot": false,
                "uuid": "109726cc-cdd6-4ee6-bb0d-5881527fd689",
                "parentUUID": "7a71b934-43e0-4938-a959-e6631ab8e65d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\build\\test\\server.spec.js",
        "uuid": "95f70aac-6bb2-4b37-afd7-07026eae2f83",
        "fullFile": "C:\\inetpub\\wwwroot\\odata-v4-server\\build\\test\\server.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "cb34412d-6e13-42fb-92ba-51c66e7a959b",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should return entity set result (GET /EntitySet)",
      "fullTitle": "OData CRUD should return entity set result (GET /EntitySet)",
      "timedOut": false,
      "duration": 89,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "73aec441-5c4a-4199-b505-2142f38a2686",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "3699109b-6efa-4457-b767-3722e5fd71a0",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity set result using async function (GET /AsyncEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "7ba95e0f-2710-4ee8-8201-fceaf43d954f",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "fullTitle": "OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "647a6db5-1968-4dd4-9172-756db5791d0d",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity by key (GET /EntitySet(1))",
      "fullTitle": "OData CRUD should return entity by key (GET /EntitySet(1))",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "d81c15bf-573d-45de-806f-34f37b8dba3b",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should insert new entity (POST /EntitySet)",
      "fullTitle": "OData CRUD should insert new entity (POST /EntitySet)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "7baf6323-0f84-47a3-b107-c65b99c3a749",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should update entity (PUT /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity (PUT /EntitySet(1))",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "6d65f845-db0a-4daf-afb5-de343b486c9b",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should update entity using delta (PATCH /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity using delta (PATCH /EntitySet(1))",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "303b9fb2-947f-4208-8386-35843a836571",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should delete entity (DELETE /EntitySet(1))",
      "fullTitle": "OData CRUD should delete entity (DELETE /EntitySet(1))",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "886e92d6-b3e1-40db-ae77-c1b613796a93",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return result count (GET /EntitySet/$count)",
      "fullTitle": "OData CRUD should return result count (GET /EntitySet/$count)",
      "timedOut": false,
      "duration": 29,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "39f31458-288e-4f65-a7d2-c5b84bfa4dba",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity property (GET /EntitySet(1)/foo)",
      "fullTitle": "OData CRUD should return entity property (GET /EntitySet(1)/foo)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "46256b11-5856-48e4-aa89-eab0e59a9952",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
      "fullTitle": "OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "6696816d-a824-46ed-831d-ef54bf9b5af2",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity value (GET /EntitySet(1)/$value)",
      "fullTitle": "OData CRUD should return entity value (GET /EntitySet(1)/$value)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "5c1031aa-6229-45d3-93aa-ad6818dd689f",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call action import (POST /ActionImport)",
      "fullTitle": "OData CRUD should call action import (POST /ActionImport)",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "09cabb7a-9771-4e2b-837e-00c980f07b41",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call action import with parameters (POST /ActionImportParams)",
      "fullTitle": "OData CRUD should call action import with parameters (POST /ActionImportParams)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "5178fa74-709f-48f1-8739-8046e800d97e",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call function import (GET /FunctionImport(value=42))",
      "fullTitle": "OData CRUD should call function import (GET /FunctionImport(value=42))",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "b5d35817-c418-47ed-9f95-edeb56fcb14d",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "b701c2d2-bdec-485f-8950-b8719913a096",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "e61087a9-f503-4aec-ad3c-7c2282d4ec90",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "b14cdb92-a06c-4ca8-8650-540e33095d4e",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "2bf98087-d49d-4434-80ef-150b3031032c",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "fullTitle": "OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "f25c9e20-b3a1-4d10-96df-959716a8d295",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "fullTitle": "OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "f0da9814-3c8b-4ab3-8c81-e2eb69f52541",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "fullTitle": "OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "7e162976-90f9-45fb-83d9-42df845d34cd",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "fullTitle": "OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "a2a5b1c3-a508-4679-b594-8819c6077daa",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "fullTitle": "OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "ac5326b3-c3e8-458f-aec4-204c46971969",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "6c27aa5f-0f71-4c6e-a35d-dbad7960a4e1",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "d389517d-3921-43ad-9e7a-4131072a0832",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "c350ea5c-18d3-429d-a483-9aa033feebf0",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "eaf6c492-0117-452f-a502-de94aaf729a0",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "timedOut": false,
      "duration": 43,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "4d2d1892-6be3-4954-8858-d15181ab9488",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "fullTitle": "OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "timedOut": false,
      "duration": 20,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "c455269a-e693-4a9d-83b5-bf77c93b3586",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "7804f029-0be3-4bce-8c5e-1c7782bfebd2",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "fullTitle": "OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "c5cedcee-bb4d-426b-a3de-7d25cec57f03",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return result including complex type (GET /Users)",
      "fullTitle": "OData CRUD should return result including complex type (GET /Users)",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "5db40233-f637-4433-a63e-f2bff8976442",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return complex type property (GET /Users(1)/Location)",
      "fullTitle": "OData CRUD should return complex type property (GET /Users(1)/Location)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "d28ee37a-fcbc-483e-8235-ecb8116c0a0c",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return empty object when no public controllers on server",
      "fullTitle": "Code coverage should return empty object when no public controllers on server",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.deepEqual(index_1.odata.getPublicControllers(NoServer), {});",
      "isRoot": false,
      "uuid": "6a44ddfb-e425-42e7-8998-2c3658d6f260",
      "parentUUID": "7a71b934-43e0-4938-a959-e6631ab8e65d",
      "skipped": false
    },
    {
      "title": "should not allow non-OData methods",
      "fullTitle": "Code coverage should not allow non-OData methods",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">try</span> {<br>    NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>);<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}<br><span class=\"hljs-keyword\">catch</span> (err) {<br>    assert.equal(err.message, <span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>}",
      "isRoot": false,
      "uuid": "4415776e-3d24-4e4b-97cb-450ca84ad615",
      "parentUUID": "7a71b934-43e0-4938-a959-e6631ab8e65d",
      "skipped": false
    },
    {
      "title": "should throw resource not found error",
      "fullTitle": "Code coverage should throw resource not found error",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    assert.equal(err.message, <span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
      "isRoot": false,
      "uuid": "e3ae90bb-93da-472c-92fd-18986d46a9db",
      "parentUUID": "7a71b934-43e0-4938-a959-e6631ab8e65d",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should return entity set result (GET /EntitySet)",
      "fullTitle": "OData CRUD should return entity set result (GET /EntitySet)",
      "timedOut": false,
      "duration": 89,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "42b442e9-4afc-4c33-95c5-74c604882ffc",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "d7c372b8-c023-43a6-80f8-59133c856dc8",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity set result using async function (GET /AsyncEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "0237a77b-61cb-4947-99d6-ba667bd5161a",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "fullTitle": "OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "41f944a3-4317-4882-8c05-01d0b4f40303",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity by key (GET /EntitySet(1))",
      "fullTitle": "OData CRUD should return entity by key (GET /EntitySet(1))",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "eddb8942-499c-47ba-8e3e-42270e581c79",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should insert new entity (POST /EntitySet)",
      "fullTitle": "OData CRUD should insert new entity (POST /EntitySet)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "ceb070bb-c3f2-4c7e-91a3-ac26ea1d4cd8",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should update entity (PUT /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity (PUT /EntitySet(1))",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "503776bb-0a42-407c-bbff-eb7e85096188",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should update entity using delta (PATCH /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity using delta (PATCH /EntitySet(1))",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "0e065c4b-7c73-4631-9b17-249326fb6e1d",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should delete entity (DELETE /EntitySet(1))",
      "fullTitle": "OData CRUD should delete entity (DELETE /EntitySet(1))",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "87a61f08-f803-4c93-b201-56a6dba925c9",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return result count (GET /EntitySet/$count)",
      "fullTitle": "OData CRUD should return result count (GET /EntitySet/$count)",
      "timedOut": false,
      "duration": 29,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "f033f2ec-5615-46d0-b903-542c46e2c433",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity property (GET /EntitySet(1)/foo)",
      "fullTitle": "OData CRUD should return entity property (GET /EntitySet(1)/foo)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "7d90839c-ea30-4e21-a079-7eb4828298f8",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
      "fullTitle": "OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "936d8625-e962-49b6-97b7-00e596568256",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity value (GET /EntitySet(1)/$value)",
      "fullTitle": "OData CRUD should return entity value (GET /EntitySet(1)/$value)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "dab8ad23-1fe6-4d23-99ca-86c0216ee5a3",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call action import (POST /ActionImport)",
      "fullTitle": "OData CRUD should call action import (POST /ActionImport)",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "317f53cf-2f28-47b7-9666-b4e53c3e7963",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call action import with parameters (POST /ActionImportParams)",
      "fullTitle": "OData CRUD should call action import with parameters (POST /ActionImportParams)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "10ac98b2-32a2-47b9-bd29-4e386cd73602",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call function import (GET /FunctionImport(value=42))",
      "fullTitle": "OData CRUD should call function import (GET /FunctionImport(value=42))",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "7c69b9ac-edc1-4251-b52e-a69866b1dc11",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "324e3a2b-7eb4-4888-98f0-90eddb4d1ea0",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "5b3d7736-7865-44fd-80de-7a47d7f83dfe",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "d81b664b-e526-4734-97d8-75b8eae0894a",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "710a6c48-11d7-419d-aef3-cc0e6d93357e",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "fullTitle": "OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "b9c8859f-6086-4e75-a98d-312bfce523cc",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "fullTitle": "OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "e38cd49d-6422-42e7-91ce-35549eb72ad4",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "fullTitle": "OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "5aa80556-3e02-4672-8b65-5979ec05e090",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "fullTitle": "OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "1f9c44c3-8270-49ad-ada6-a73c0baf2150",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "fullTitle": "OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "712cc241-4b34-4a04-847f-24f22e9fbf25",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "d481ccd2-36b0-474a-9afe-343dc77da658",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "5467bf06-432e-4b60-82f8-d8ba3df2d7b4",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "b30964c3-7ce2-4b52-96fa-9ee999d875be",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "9cabc3cf-8b23-476c-8a77-b9aad64f9899",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "timedOut": false,
      "duration": 43,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "0e86a1ca-e64a-4381-a466-896c8ce0c2ed",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "fullTitle": "OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "timedOut": false,
      "duration": 20,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "1b7f1686-ed18-496c-bb49-fa1295310e69",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "6536eea3-2f23-4c34-8c74-0fd68b71f8bb",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "fullTitle": "OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "69c4a581-10f6-4662-a33a-4508a51a4aa0",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return result including complex type (GET /Users)",
      "fullTitle": "OData CRUD should return result including complex type (GET /Users)",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "dea2b289-1c2e-4da2-8c45-01b2296ff7aa",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return complex type property (GET /Users(1)/Location)",
      "fullTitle": "OData CRUD should return complex type property (GET /Users(1)/Location)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "659e444b-915b-4ec6-abbf-fba880d20408",
      "parentUUID": "68e9697c-1637-47f7-b051-133b1b763754",
      "skipped": false
    },
    {
      "title": "should return empty object when no public controllers on server",
      "fullTitle": "Code coverage should return empty object when no public controllers on server",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.deepEqual(index_1.odata.getPublicControllers(NoServer), {});",
      "isRoot": false,
      "uuid": "e188dc82-397a-4465-9141-6cd15638d1b5",
      "parentUUID": "7a71b934-43e0-4938-a959-e6631ab8e65d",
      "skipped": false
    },
    {
      "title": "should not allow non-OData methods",
      "fullTitle": "Code coverage should not allow non-OData methods",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">try</span> {<br>    NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>);<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}<br><span class=\"hljs-keyword\">catch</span> (err) {<br>    assert.equal(err.message, <span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>}",
      "isRoot": false,
      "uuid": "ed116a7d-93ac-4414-aa7e-9c8fdaa19b97",
      "parentUUID": "7a71b934-43e0-4938-a959-e6631ab8e65d",
      "skipped": false
    },
    {
      "title": "should throw resource not found error",
      "fullTitle": "Code coverage should throw resource not found error",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    assert.equal(err.message, <span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
      "isRoot": false,
      "uuid": "9d283f72-ebe6-4a95-b4f8-fd7cc8daa6f7",
      "parentUUID": "7a71b934-43e0-4938-a959-e6631ab8e65d",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}