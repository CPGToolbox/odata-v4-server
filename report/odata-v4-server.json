{
  "reportTitle": "OData V4 Server",
  "stats": {
    "suites": 3,
    "tests": 38,
    "passes": 38,
    "pending": 0,
    "failures": 0,
    "start": "2016-11-03T10:25:35.406Z",
    "end": "2016-11-03T10:25:35.892Z",
    "duration": 486,
    "testsRegistered": 38,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "ODataServer",
        "suites": [
          {
            "title": "OData CRUD",
            "suites": [],
            "tests": [
              {
                "title": "should return entity set result (GET /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result (GET /EntitySet)",
                "timedOut": false,
                "duration": 31,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "640696eb-ab3c-4adc-a2d7-b24d0fe5fb28",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "9af9efa9-6a0a-47fa-8f4f-dc2d84da9902",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity set result using async function (GET /AsyncEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "796bf1cd-7d99-4332-a38d-0117bb211a2c",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "fullTitle": "ODataServer OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "709dbd35-1bc4-4a06-9535-ce99b8d9428b",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity by key (GET /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should return entity by key (GET /EntitySet(1))",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "4dcddecc-417d-4c49-a0db-e384e8e4574d",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should insert new entity (POST /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should insert new entity (POST /EntitySet)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "3f355c43-8e89-40e8-a4e2-1e60112f362a",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should update entity (PUT /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity (PUT /EntitySet(1))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "696eeaa4-b84b-4d60-9d31-91691d538658",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should update entity using delta (PATCH /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity using delta (PATCH /EntitySet(1))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "f27e2599-029e-4aba-8f5a-44adbfc59e79",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should delete entity (DELETE /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should delete entity (DELETE /EntitySet(1))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "b5b5183a-c057-4c51-9365-ad4186b2aa85",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return result count (GET /EntitySet/$count)",
                "fullTitle": "ODataServer OData CRUD should return result count (GET /EntitySet/$count)",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "1f4e85ea-d742-44c0-9d0a-5fb2a5f09387",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity property (GET /EntitySet(1)/foo)",
                "fullTitle": "ODataServer OData CRUD should return entity property (GET /EntitySet(1)/foo)",
                "timedOut": false,
                "duration": 15,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "71058787-b3bf-4436-a047-d872edb4882d",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "df405e3d-f3c3-4ee8-b4b0-4589a775f457",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity value (GET /EntitySet(1)/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity value (GET /EntitySet(1)/$value)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "2615fe68-7c94-4def-83a8-b13db7a4e735",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call action import (POST /ActionImport)",
                "fullTitle": "ODataServer OData CRUD should call action import (POST /ActionImport)",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "3df1d682-6a38-409c-a823-03710ffca385",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call action import with parameters (POST /ActionImportParams)",
                "fullTitle": "ODataServer OData CRUD should call action import with parameters (POST /ActionImportParams)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "b032b76b-39b3-4fda-b5e1-4bf3feac6cb7",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call function import (GET /FunctionImport(value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import (GET /FunctionImport(value=42))",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "5caa6c7f-1635-420f-b03e-999b51cc4d8a",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "84903ef6-7a01-4ae6-ba5f-4a6b7c7d2115",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "a3b20662-7026-4850-8781-2d2367fc3fbb",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "649f97ad-551b-4f3c-9d74-1150d13b10fe",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "35ca08de-c2c5-4afd-b997-47a0b2c87f64",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "fullTitle": "ODataServer OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "c2ad1a49-351c-4fad-bc2a-a2d316373007",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "fullTitle": "ODataServer OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "66b40ad9-fa96-4421-ba44-b7735feb04b7",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "fullTitle": "ODataServer OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "2a15d563-2194-4822-8e48-3a42d8591bb0",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "fullTitle": "ODataServer OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "8e69236e-1449-4ffa-8f5b-9409b1b7d0bb",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "fullTitle": "ODataServer OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "7da603be-e54a-4a60-ad9a-96f8f499f9de",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "3eefd331-a8b7-4913-850c-c6dd1ed2f801",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "7f71e960-09c0-4379-816a-6ec9e35d07e6",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 15,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "ff03d05f-51d7-49e4-8ab5-3fc2e20dd8d6",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "761c83a4-aa68-4484-b9b8-65a9d0e9e5cd",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "timedOut": false,
                "duration": 38,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "60f7f67c-fc10-4258-aa49-c37ac12bf284",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "timedOut": false,
                "duration": 30,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "accc312c-58df-43f5-b0da-7e6c88a50882",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "timedOut": false,
                "duration": 25,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "f067d9fe-8fbc-419f-a98a-2fefbf992294",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "fullTitle": "ODataServer OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "8a9c6521-9559-4b9c-ba60-2ab178e3f5b8",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return result including complex type (GET /Users)",
                "fullTitle": "ODataServer OData CRUD should return result including complex type (GET /Users)",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "dec2a322-b5f7-4951-b9a4-5fe68d732165",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return complex type property (GET /Users(1)/Location)",
                "fullTitle": "ODataServer OData CRUD should return complex type property (GET /Users(1)/Location)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "7416ce69-1b3a-426c-8939-3710f3f5d80b",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\build\\test\\server.spec.js",
            "uuid": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
            "fullFile": "C:\\inetpub\\wwwroot\\odata-v4-server\\build\\test\\server.spec.js",
            "passes": [
              {
                "title": "should return entity set result (GET /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result (GET /EntitySet)",
                "timedOut": false,
                "duration": 31,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "640696eb-ab3c-4adc-a2d7-b24d0fe5fb28",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "9af9efa9-6a0a-47fa-8f4f-dc2d84da9902",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity set result using async function (GET /AsyncEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "796bf1cd-7d99-4332-a38d-0117bb211a2c",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "fullTitle": "ODataServer OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "709dbd35-1bc4-4a06-9535-ce99b8d9428b",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity by key (GET /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should return entity by key (GET /EntitySet(1))",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "4dcddecc-417d-4c49-a0db-e384e8e4574d",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should insert new entity (POST /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should insert new entity (POST /EntitySet)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "3f355c43-8e89-40e8-a4e2-1e60112f362a",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should update entity (PUT /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity (PUT /EntitySet(1))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "696eeaa4-b84b-4d60-9d31-91691d538658",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should update entity using delta (PATCH /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity using delta (PATCH /EntitySet(1))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "f27e2599-029e-4aba-8f5a-44adbfc59e79",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should delete entity (DELETE /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should delete entity (DELETE /EntitySet(1))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "b5b5183a-c057-4c51-9365-ad4186b2aa85",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return result count (GET /EntitySet/$count)",
                "fullTitle": "ODataServer OData CRUD should return result count (GET /EntitySet/$count)",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "1f4e85ea-d742-44c0-9d0a-5fb2a5f09387",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity property (GET /EntitySet(1)/foo)",
                "fullTitle": "ODataServer OData CRUD should return entity property (GET /EntitySet(1)/foo)",
                "timedOut": false,
                "duration": 15,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "71058787-b3bf-4436-a047-d872edb4882d",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "df405e3d-f3c3-4ee8-b4b0-4589a775f457",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity value (GET /EntitySet(1)/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity value (GET /EntitySet(1)/$value)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "2615fe68-7c94-4def-83a8-b13db7a4e735",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call action import (POST /ActionImport)",
                "fullTitle": "ODataServer OData CRUD should call action import (POST /ActionImport)",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "3df1d682-6a38-409c-a823-03710ffca385",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call action import with parameters (POST /ActionImportParams)",
                "fullTitle": "ODataServer OData CRUD should call action import with parameters (POST /ActionImportParams)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "b032b76b-39b3-4fda-b5e1-4bf3feac6cb7",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call function import (GET /FunctionImport(value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import (GET /FunctionImport(value=42))",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "5caa6c7f-1635-420f-b03e-999b51cc4d8a",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "84903ef6-7a01-4ae6-ba5f-4a6b7c7d2115",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "a3b20662-7026-4850-8781-2d2367fc3fbb",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "649f97ad-551b-4f3c-9d74-1150d13b10fe",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "35ca08de-c2c5-4afd-b997-47a0b2c87f64",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "fullTitle": "ODataServer OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "c2ad1a49-351c-4fad-bc2a-a2d316373007",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "fullTitle": "ODataServer OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "66b40ad9-fa96-4421-ba44-b7735feb04b7",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "fullTitle": "ODataServer OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "2a15d563-2194-4822-8e48-3a42d8591bb0",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "fullTitle": "ODataServer OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "8e69236e-1449-4ffa-8f5b-9409b1b7d0bb",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "fullTitle": "ODataServer OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "7da603be-e54a-4a60-ad9a-96f8f499f9de",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "3eefd331-a8b7-4913-850c-c6dd1ed2f801",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "7f71e960-09c0-4379-816a-6ec9e35d07e6",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 15,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "ff03d05f-51d7-49e4-8ab5-3fc2e20dd8d6",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "761c83a4-aa68-4484-b9b8-65a9d0e9e5cd",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "timedOut": false,
                "duration": 38,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "60f7f67c-fc10-4258-aa49-c37ac12bf284",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "timedOut": false,
                "duration": 30,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "accc312c-58df-43f5-b0da-7e6c88a50882",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "timedOut": false,
                "duration": 25,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "f067d9fe-8fbc-419f-a98a-2fefbf992294",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "fullTitle": "ODataServer OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "8a9c6521-9559-4b9c-ba60-2ab178e3f5b8",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return result including complex type (GET /Users)",
                "fullTitle": "ODataServer OData CRUD should return result including complex type (GET /Users)",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "dec2a322-b5f7-4951-b9a4-5fe68d732165",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              },
              {
                "title": "should return complex type property (GET /Users(1)/Location)",
                "fullTitle": "ODataServer OData CRUD should return complex type property (GET /Users(1)/Location)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "7416ce69-1b3a-426c-8939-3710f3f5d80b",
                "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 35,
            "totalPasses": 35,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 287
          },
          {
            "title": "Code coverage",
            "suites": [],
            "tests": [
              {
                "title": "should return empty object when no public controllers on server",
                "fullTitle": "ODataServer Code coverage should return empty object when no public controllers on server",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(index_1.odata.getPublicControllers(NoServer)).to.deep.equal({});",
                "isRoot": false,
                "uuid": "8933ca4e-bcbd-4ebc-b1e9-aa36f55ca9bf",
                "parentUUID": "a42b1f40-a6a0-46a1-9802-5e3aaa3cf545",
                "skipped": false
              },
              {
                "title": "should not allow non-OData methods",
                "fullTitle": "ODataServer Code coverage should not allow non-OData methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">try</span> {<br>    NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>);<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}<br><span class=\"hljs-keyword\">catch</span> (err) {<br>    expect(err.message).to.equal(<span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>}",
                "isRoot": false,
                "uuid": "d298becd-0af4-489e-9c8f-3aeeccef024b",
                "parentUUID": "a42b1f40-a6a0-46a1-9802-5e3aaa3cf545",
                "skipped": false
              },
              {
                "title": "should throw resource not found error",
                "fullTitle": "ODataServer Code coverage should throw resource not found error",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    expect(err.message).to.equal(<span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
                "isRoot": false,
                "uuid": "e4809337-70b2-47d1-b617-5f148f8a18ea",
                "parentUUID": "a42b1f40-a6a0-46a1-9802-5e3aaa3cf545",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\build\\test\\server.spec.js",
            "uuid": "a42b1f40-a6a0-46a1-9802-5e3aaa3cf545",
            "fullFile": "C:\\inetpub\\wwwroot\\odata-v4-server\\build\\test\\server.spec.js",
            "passes": [
              {
                "title": "should return empty object when no public controllers on server",
                "fullTitle": "ODataServer Code coverage should return empty object when no public controllers on server",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(index_1.odata.getPublicControllers(NoServer)).to.deep.equal({});",
                "isRoot": false,
                "uuid": "8933ca4e-bcbd-4ebc-b1e9-aa36f55ca9bf",
                "parentUUID": "a42b1f40-a6a0-46a1-9802-5e3aaa3cf545",
                "skipped": false
              },
              {
                "title": "should not allow non-OData methods",
                "fullTitle": "ODataServer Code coverage should not allow non-OData methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">try</span> {<br>    NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>);<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}<br><span class=\"hljs-keyword\">catch</span> (err) {<br>    expect(err.message).to.equal(<span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>}",
                "isRoot": false,
                "uuid": "d298becd-0af4-489e-9c8f-3aeeccef024b",
                "parentUUID": "a42b1f40-a6a0-46a1-9802-5e3aaa3cf545",
                "skipped": false
              },
              {
                "title": "should throw resource not found error",
                "fullTitle": "ODataServer Code coverage should throw resource not found error",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    expect(err.message).to.equal(<span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
                "isRoot": false,
                "uuid": "e4809337-70b2-47d1-b617-5f148f8a18ea",
                "parentUUID": "a42b1f40-a6a0-46a1-9802-5e3aaa3cf545",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\build\\test\\server.spec.js",
        "uuid": "6507ff30-4f86-42bb-bb7d-98983a420a1a",
        "fullFile": "C:\\inetpub\\wwwroot\\odata-v4-server\\build\\test\\server.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "b0248723-8e00-4cea-8073-0f558bddb662",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should return entity set result (GET /EntitySet)",
      "fullTitle": "OData CRUD should return entity set result (GET /EntitySet)",
      "timedOut": false,
      "duration": 31,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "bf8ea7ad-52f4-4520-9e4a-2b0bfc5c6272",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "ca06b65a-1374-434b-8019-e4e3e4c5dbc3",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity set result using async function (GET /AsyncEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "9dec675c-dbf3-407e-8c5e-e4e2501a2f18",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "fullTitle": "OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "8b991aea-f947-4571-ba66-6021f0932a37",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity by key (GET /EntitySet(1))",
      "fullTitle": "OData CRUD should return entity by key (GET /EntitySet(1))",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "c0bbf4ed-c47f-4426-8c37-9e2eddd3bae0",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should insert new entity (POST /EntitySet)",
      "fullTitle": "OData CRUD should insert new entity (POST /EntitySet)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "f1dc8631-b3a3-488e-a023-d15539cfc798",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should update entity (PUT /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity (PUT /EntitySet(1))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "9df98f57-3bdb-4fa1-acff-0cb5e0cbc6a4",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should update entity using delta (PATCH /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity using delta (PATCH /EntitySet(1))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "51c1a403-1c18-4c40-9292-6ff1e351b89f",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should delete entity (DELETE /EntitySet(1))",
      "fullTitle": "OData CRUD should delete entity (DELETE /EntitySet(1))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "e63fd1c3-c54a-4f14-9821-ae05ce1ea3bc",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return result count (GET /EntitySet/$count)",
      "fullTitle": "OData CRUD should return result count (GET /EntitySet/$count)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "80b366a5-51dd-49f0-97a0-b4bcd3aed9c6",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity property (GET /EntitySet(1)/foo)",
      "fullTitle": "OData CRUD should return entity property (GET /EntitySet(1)/foo)",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "315f3d6d-ca9d-4373-bfc2-ab7c04f159e2",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
      "fullTitle": "OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "4aefe6a1-d8de-437f-8abe-a7ad73368884",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity value (GET /EntitySet(1)/$value)",
      "fullTitle": "OData CRUD should return entity value (GET /EntitySet(1)/$value)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "a0c42aa3-825c-4cc1-a3c2-637d946a29cb",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call action import (POST /ActionImport)",
      "fullTitle": "OData CRUD should call action import (POST /ActionImport)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "f01c0a1c-7e6c-4cf1-825e-3a7375d4db5f",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call action import with parameters (POST /ActionImportParams)",
      "fullTitle": "OData CRUD should call action import with parameters (POST /ActionImportParams)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "ca88d851-0de3-46e6-9593-63473a71981f",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call function import (GET /FunctionImport(value=42))",
      "fullTitle": "OData CRUD should call function import (GET /FunctionImport(value=42))",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "9effcd15-dd95-4917-877d-e6e91bf82c17",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "d8f812d6-c3cf-4ba9-a523-a9ead458dbc1",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "fdf95432-fa39-443b-82f7-49c6080111d1",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "002189e9-012a-41b5-b232-008fab6a1e98",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "76c2ab83-22cc-4226-ab0f-2d9cc679a7d8",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "fullTitle": "OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "timedOut": false,
      "duration": 12,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "f877c1f3-5228-466e-9319-c8549de06585",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "fullTitle": "OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "d5594cc7-c82d-45ca-a457-d5136bd18438",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "fullTitle": "OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "3e9c5dc0-cd1c-4fe7-a9d3-29f5eaca857f",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "fullTitle": "OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "89b20c73-4311-41c9-8273-387823ab3eeb",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "fullTitle": "OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "1d5c4059-600a-4d99-a149-bb8dca16c128",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "d39ecfe5-c7ae-4f65-b2b6-ea6a9367fd35",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "d8c6ae8c-bf78-431a-bc34-75b5ddc29c09",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "fe49cafa-eb5d-45ec-b082-03916cce2da1",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "e5dbc92c-7d9e-4979-9237-bdd923465485",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "timedOut": false,
      "duration": 38,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "c47d0882-85c1-485c-aaa0-f76d9da1fb23",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "fullTitle": "OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "c297f661-2d25-49ec-8f92-98686128ce4e",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "d67e485f-23c5-4fef-af3f-4bf66c1592cd",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "fullTitle": "OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "9d3311dc-0166-420d-930a-5ee114d03bf4",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return result including complex type (GET /Users)",
      "fullTitle": "OData CRUD should return result including complex type (GET /Users)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "ad691a36-0d76-491c-9246-91f548d94c95",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return complex type property (GET /Users(1)/Location)",
      "fullTitle": "OData CRUD should return complex type property (GET /Users(1)/Location)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "4500dc02-200e-492f-93d2-d34289df6d54",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return empty object when no public controllers on server",
      "fullTitle": "Code coverage should return empty object when no public controllers on server",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(index_1.odata.getPublicControllers(NoServer)).to.deep.equal({});",
      "isRoot": false,
      "uuid": "262545e9-ff68-48f2-87c1-065e0d6e324a",
      "parentUUID": "a42b1f40-a6a0-46a1-9802-5e3aaa3cf545",
      "skipped": false
    },
    {
      "title": "should not allow non-OData methods",
      "fullTitle": "Code coverage should not allow non-OData methods",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">try</span> {<br>    NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>);<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}<br><span class=\"hljs-keyword\">catch</span> (err) {<br>    expect(err.message).to.equal(<span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>}",
      "isRoot": false,
      "uuid": "672ba0fb-0ed9-48cb-89c4-72c0bcb6956f",
      "parentUUID": "a42b1f40-a6a0-46a1-9802-5e3aaa3cf545",
      "skipped": false
    },
    {
      "title": "should throw resource not found error",
      "fullTitle": "Code coverage should throw resource not found error",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    expect(err.message).to.equal(<span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
      "isRoot": false,
      "uuid": "5c741f7e-aa33-4efa-816c-10501237f954",
      "parentUUID": "a42b1f40-a6a0-46a1-9802-5e3aaa3cf545",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should return entity set result (GET /EntitySet)",
      "fullTitle": "OData CRUD should return entity set result (GET /EntitySet)",
      "timedOut": false,
      "duration": 31,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "3c977791-536f-44ef-ac15-fcb89b86d132",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "3ef97be8-18ef-4fbd-99e4-46799ccc49be",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity set result using async function (GET /AsyncEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "e37ef22b-0c07-4f4b-9a34-dfa3c2676b51",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "fullTitle": "OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "3c455f5b-9594-4f3e-b721-775426b8affb",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity by key (GET /EntitySet(1))",
      "fullTitle": "OData CRUD should return entity by key (GET /EntitySet(1))",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "e80b0c9e-d4d8-4abd-8034-c627c9978741",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should insert new entity (POST /EntitySet)",
      "fullTitle": "OData CRUD should insert new entity (POST /EntitySet)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "f6a76368-e254-452d-b24d-69a3a41339ba",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should update entity (PUT /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity (PUT /EntitySet(1))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "9a8c6678-dfb4-4069-b7ee-590e75997eb3",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should update entity using delta (PATCH /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity using delta (PATCH /EntitySet(1))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "c18838c2-5de4-4eb9-929c-daabbf5588f9",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should delete entity (DELETE /EntitySet(1))",
      "fullTitle": "OData CRUD should delete entity (DELETE /EntitySet(1))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "507ead2c-cd18-4d38-a863-61e387442b2c",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return result count (GET /EntitySet/$count)",
      "fullTitle": "OData CRUD should return result count (GET /EntitySet/$count)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "a5e5bdd1-ca51-4389-8992-482520ed3264",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity property (GET /EntitySet(1)/foo)",
      "fullTitle": "OData CRUD should return entity property (GET /EntitySet(1)/foo)",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "65179380-0702-468f-bce8-bdf1bf2150ce",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
      "fullTitle": "OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "f68e8ac4-d47d-4ad4-9572-6aa3b1f4bfee",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity value (GET /EntitySet(1)/$value)",
      "fullTitle": "OData CRUD should return entity value (GET /EntitySet(1)/$value)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "e9f21cd2-cfde-4165-80da-755c72028261",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call action import (POST /ActionImport)",
      "fullTitle": "OData CRUD should call action import (POST /ActionImport)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "4b257986-39de-44d8-966f-4dd13b9d053d",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call action import with parameters (POST /ActionImportParams)",
      "fullTitle": "OData CRUD should call action import with parameters (POST /ActionImportParams)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "f825d426-e042-4308-bc14-09971afcc1dc",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call function import (GET /FunctionImport(value=42))",
      "fullTitle": "OData CRUD should call function import (GET /FunctionImport(value=42))",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "4baa6b1d-5141-4353-9103-9917d1d08a89",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "1a282b67-df51-43d0-900b-31ec15ff2246",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "2e4b35e7-7255-47bd-a731-4e2032a88b2c",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "397d9af7-52ab-4864-b3cd-01f2b0081a06",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "157fd85d-fe15-419e-b1ef-4d0ac07695a4",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "fullTitle": "OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "timedOut": false,
      "duration": 12,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "503671a9-39a1-455f-afdc-1ec726e4584d",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "fullTitle": "OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "d1f3f22f-0314-4fa8-b5cc-e772c043b00b",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "fullTitle": "OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "a65c3cc3-c1ee-429c-9f2b-2ce76d2ac595",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "fullTitle": "OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "e44642c0-8fa3-4f3c-a500-4843c38d1698",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "fullTitle": "OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "8ebf9e13-69d3-4be6-961a-182332913e62",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "2c771c95-bab3-4c82-9c7a-55749dcbb7b6",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "cee0af0e-68b6-4496-a59a-156f9a54134e",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "c48fdc7b-42bc-4c23-b9d6-2f2681d61b05",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "719c155f-8e17-4df6-9fa7-33d7ff7ffb77",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "timedOut": false,
      "duration": 38,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "afdd8323-3d1e-4044-86de-089164252241",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "fullTitle": "OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "5e5eea53-1f08-4e4b-920a-69e8367f4c43",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "37a32322-d4ef-41a3-a446-8a26ed17ea30",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "fullTitle": "OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "8fa47ebc-3e6f-406d-883a-3e7374e2ac0f",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return result including complex type (GET /Users)",
      "fullTitle": "OData CRUD should return result including complex type (GET /Users)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "3a2a962d-6eed-47e0-929b-52f6fd148882",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return complex type property (GET /Users(1)/Location)",
      "fullTitle": "OData CRUD should return complex type property (GET /Users(1)/Location)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "334322fb-8d61-4b09-8670-6914e72a423e",
      "parentUUID": "c914d2dc-0415-4796-938c-5ccfeafdb1b5",
      "skipped": false
    },
    {
      "title": "should return empty object when no public controllers on server",
      "fullTitle": "Code coverage should return empty object when no public controllers on server",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(index_1.odata.getPublicControllers(NoServer)).to.deep.equal({});",
      "isRoot": false,
      "uuid": "6bb3a359-af03-4686-96ae-81fc34bf7e0a",
      "parentUUID": "a42b1f40-a6a0-46a1-9802-5e3aaa3cf545",
      "skipped": false
    },
    {
      "title": "should not allow non-OData methods",
      "fullTitle": "Code coverage should not allow non-OData methods",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">try</span> {<br>    NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>);<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}<br><span class=\"hljs-keyword\">catch</span> (err) {<br>    expect(err.message).to.equal(<span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>}",
      "isRoot": false,
      "uuid": "ad971900-12a1-49ea-b49d-044709deb258",
      "parentUUID": "a42b1f40-a6a0-46a1-9802-5e3aaa3cf545",
      "skipped": false
    },
    {
      "title": "should throw resource not found error",
      "fullTitle": "Code coverage should throw resource not found error",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    expect(err.message).to.equal(<span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
      "isRoot": false,
      "uuid": "05bb73f1-3a5b-445e-bd09-e0bf4392d0e0",
      "parentUUID": "a42b1f40-a6a0-46a1-9802-5e3aaa3cf545",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}