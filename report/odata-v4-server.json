{
  "reportTitle": "OData V4 Server",
  "stats": {
    "suites": 3,
    "tests": 38,
    "passes": 38,
    "pending": 0,
    "failures": 0,
    "start": "2016-11-14T12:04:08.691Z",
    "end": "2016-11-14T12:04:09.340Z",
    "duration": 649,
    "testsRegistered": 38,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "ODataServer",
        "suites": [
          {
            "title": "OData CRUD",
            "suites": [],
            "tests": [
              {
                "title": "should return entity set result (GET /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result (GET /EntitySet)",
                "timedOut": false,
                "duration": 59,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "b3d4a6c6-0163-452d-8523-724ee9c35a96",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "998e1a43-1e98-4576-a97a-eaa0bb5a472a",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity set result using async function (GET /AsyncEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "c7fd85e7-2fa7-4de1-92a8-d9b9ac08da91",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "fullTitle": "ODataServer OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "d7652aa3-b57e-4d04-91e9-738391e0ffef",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity by key (GET /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should return entity by key (GET /EntitySet(1))",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "38eda882-3adb-4011-9123-07e3d1f77ad9",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should insert new entity (POST /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should insert new entity (POST /EntitySet)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "02a23a3a-a145-4855-9b19-e844042d6321",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should update entity (PUT /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity (PUT /EntitySet(1))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "d849fd54-e53b-4ab1-95e8-6eac70caf9b3",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should update entity using delta (PATCH /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity using delta (PATCH /EntitySet(1))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "e38455de-111f-46f1-b620-ed0f92ea675d",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should delete entity (DELETE /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should delete entity (DELETE /EntitySet(1))",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "9dae44b9-da0b-4745-a6f3-80c2daabda79",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return result count (GET /EntitySet/$count)",
                "fullTitle": "ODataServer OData CRUD should return result count (GET /EntitySet/$count)",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "50bce4a6-2963-48cf-b396-6b02c7e2a9a7",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity property (GET /EntitySet(1)/foo)",
                "fullTitle": "ODataServer OData CRUD should return entity property (GET /EntitySet(1)/foo)",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "8ca9dab5-51af-4442-87e5-bf886015967c",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "01a8ab1e-1035-4164-8c47-cab20d684125",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity value (GET /EntitySet(1)/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity value (GET /EntitySet(1)/$value)",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "e1645c9a-3a5c-40d6-bc39-aa00bef2982b",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call action import (POST /ActionImport)",
                "fullTitle": "ODataServer OData CRUD should call action import (POST /ActionImport)",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "7e363214-0d66-406d-a03b-3e97179ad7b8",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call action import with parameters (POST /ActionImportParams)",
                "fullTitle": "ODataServer OData CRUD should call action import with parameters (POST /ActionImportParams)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "b991126a-83cb-4ef7-91d8-4378e9711136",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call function import (GET /FunctionImport(value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import (GET /FunctionImport(value=42))",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "66a54257-3880-457e-8bc4-be5f3158c754",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "c41e1b25-6f86-45d1-aa5c-91e052f862f6",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "f6001107-3295-4937-9d4a-8d4666baa1ca",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "0716bd71-aeea-4ab1-bc46-72ee2f5ba3ea",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "92f52b24-95ca-41d0-9e38-173a3cf3d0d9",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "fullTitle": "ODataServer OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "ee8bdbc3-4d75-42f9-a157-8eff1eb9664b",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "fullTitle": "ODataServer OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "79557dde-68fc-4f27-97cb-de55c3782f54",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "fullTitle": "ODataServer OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "ac335909-3d66-4a71-956c-c6c81e731e15",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "fullTitle": "ODataServer OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "28a072d0-c4e1-4982-9149-df52c10da0ff",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "fullTitle": "ODataServer OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "3d3bafaf-01a9-43df-a271-2e453344988d",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "f10b2739-d9a1-4d03-8491-9ba1502bc9d0",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "1e7eb1a6-a7b0-4da7-9568-b7341bed3f06",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "e3d22fac-4a7e-457f-b73d-f7bbf586de75",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "bf5e0ef2-f698-4474-8894-71e66bb98122",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "timedOut": false,
                "duration": 63,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "b5c47910-1bcd-4bdc-a317-eaafb9d11018",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "timedOut": false,
                "duration": 38,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "13d30035-254b-4b01-96c8-fd7242e7b8b3",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "9fbe4eca-ae78-4f73-b3fc-e643f0185805",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "fullTitle": "ODataServer OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "dd945e9a-1891-4bb5-b0ac-f6286246763d",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return result including complex type (GET /Users)",
                "fullTitle": "ODataServer OData CRUD should return result including complex type (GET /Users)",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "3dce1c87-d4e7-49f1-9b22-b8031649127c",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return complex type property (GET /Users(1)/Location)",
                "fullTitle": "ODataServer OData CRUD should return complex type property (GET /Users(1)/Location)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "7c9b5236-7930-444d-95ba-9b7c0082cbb8",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\build\\test\\server.spec.js",
            "uuid": "8c745571-2602-4a12-97e6-d73221749ea1",
            "fullFile": "C:\\inetpub\\wwwroot\\odata-v4-server\\build\\test\\server.spec.js",
            "passes": [
              {
                "title": "should return entity set result (GET /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result (GET /EntitySet)",
                "timedOut": false,
                "duration": 59,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "b3d4a6c6-0163-452d-8523-724ee9c35a96",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "998e1a43-1e98-4576-a97a-eaa0bb5a472a",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity set result using async function (GET /AsyncEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "c7fd85e7-2fa7-4de1-92a8-d9b9ac08da91",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "fullTitle": "ODataServer OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "d7652aa3-b57e-4d04-91e9-738391e0ffef",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity by key (GET /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should return entity by key (GET /EntitySet(1))",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "38eda882-3adb-4011-9123-07e3d1f77ad9",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should insert new entity (POST /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should insert new entity (POST /EntitySet)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "02a23a3a-a145-4855-9b19-e844042d6321",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should update entity (PUT /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity (PUT /EntitySet(1))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "d849fd54-e53b-4ab1-95e8-6eac70caf9b3",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should update entity using delta (PATCH /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity using delta (PATCH /EntitySet(1))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "e38455de-111f-46f1-b620-ed0f92ea675d",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should delete entity (DELETE /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should delete entity (DELETE /EntitySet(1))",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "9dae44b9-da0b-4745-a6f3-80c2daabda79",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return result count (GET /EntitySet/$count)",
                "fullTitle": "ODataServer OData CRUD should return result count (GET /EntitySet/$count)",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "50bce4a6-2963-48cf-b396-6b02c7e2a9a7",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity property (GET /EntitySet(1)/foo)",
                "fullTitle": "ODataServer OData CRUD should return entity property (GET /EntitySet(1)/foo)",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "8ca9dab5-51af-4442-87e5-bf886015967c",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "01a8ab1e-1035-4164-8c47-cab20d684125",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity value (GET /EntitySet(1)/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity value (GET /EntitySet(1)/$value)",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "e1645c9a-3a5c-40d6-bc39-aa00bef2982b",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call action import (POST /ActionImport)",
                "fullTitle": "ODataServer OData CRUD should call action import (POST /ActionImport)",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "7e363214-0d66-406d-a03b-3e97179ad7b8",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call action import with parameters (POST /ActionImportParams)",
                "fullTitle": "ODataServer OData CRUD should call action import with parameters (POST /ActionImportParams)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "b991126a-83cb-4ef7-91d8-4378e9711136",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call function import (GET /FunctionImport(value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import (GET /FunctionImport(value=42))",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "66a54257-3880-457e-8bc4-be5f3158c754",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "c41e1b25-6f86-45d1-aa5c-91e052f862f6",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "f6001107-3295-4937-9d4a-8d4666baa1ca",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "0716bd71-aeea-4ab1-bc46-72ee2f5ba3ea",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "92f52b24-95ca-41d0-9e38-173a3cf3d0d9",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "fullTitle": "ODataServer OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "ee8bdbc3-4d75-42f9-a157-8eff1eb9664b",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "fullTitle": "ODataServer OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "79557dde-68fc-4f27-97cb-de55c3782f54",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "fullTitle": "ODataServer OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "ac335909-3d66-4a71-956c-c6c81e731e15",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "fullTitle": "ODataServer OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "28a072d0-c4e1-4982-9149-df52c10da0ff",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "fullTitle": "ODataServer OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "3d3bafaf-01a9-43df-a271-2e453344988d",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "f10b2739-d9a1-4d03-8491-9ba1502bc9d0",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "1e7eb1a6-a7b0-4da7-9568-b7341bed3f06",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "e3d22fac-4a7e-457f-b73d-f7bbf586de75",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "bf5e0ef2-f698-4474-8894-71e66bb98122",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "timedOut": false,
                "duration": 63,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "b5c47910-1bcd-4bdc-a317-eaafb9d11018",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "timedOut": false,
                "duration": 38,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "13d30035-254b-4b01-96c8-fd7242e7b8b3",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "9fbe4eca-ae78-4f73-b3fc-e643f0185805",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "fullTitle": "ODataServer OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "dd945e9a-1891-4bb5-b0ac-f6286246763d",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return result including complex type (GET /Users)",
                "fullTitle": "ODataServer OData CRUD should return result including complex type (GET /Users)",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "3dce1c87-d4e7-49f1-9b22-b8031649127c",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              },
              {
                "title": "should return complex type property (GET /Users(1)/Location)",
                "fullTitle": "ODataServer OData CRUD should return complex type property (GET /Users(1)/Location)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
                "isRoot": false,
                "uuid": "7c9b5236-7930-444d-95ba-9b7c0082cbb8",
                "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 35,
            "totalPasses": 35,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 398
          },
          {
            "title": "Code coverage",
            "suites": [],
            "tests": [
              {
                "title": "should return empty object when no public controllers on server",
                "fullTitle": "ODataServer Code coverage should return empty object when no public controllers on server",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(index_1.odata.getPublicControllers(NoServer)).to.deep.equal({});",
                "isRoot": false,
                "uuid": "34484a7e-a07e-4228-a84e-f3072d2c2ab4",
                "parentUUID": "ef81ccbe-9429-4968-b171-7bd9bb3283b8",
                "skipped": false
              },
              {
                "title": "should not allow non-OData methods",
                "fullTitle": "ODataServer Code coverage should not allow non-OData methods",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">try</span> {<br>    NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>);<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}<br><span class=\"hljs-keyword\">catch</span> (err) {<br>    expect(err.message).to.equal(<span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>}",
                "isRoot": false,
                "uuid": "0e957517-d6a9-4266-a139-59fe2941942b",
                "parentUUID": "ef81ccbe-9429-4968-b171-7bd9bb3283b8",
                "skipped": false
              },
              {
                "title": "should throw resource not found error",
                "fullTitle": "ODataServer Code coverage should throw resource not found error",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    expect(err.message).to.equal(<span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
                "isRoot": false,
                "uuid": "5ec89891-942e-4d85-bfb8-8f10e5e84f49",
                "parentUUID": "ef81ccbe-9429-4968-b171-7bd9bb3283b8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\build\\test\\server.spec.js",
            "uuid": "ef81ccbe-9429-4968-b171-7bd9bb3283b8",
            "fullFile": "C:\\inetpub\\wwwroot\\odata-v4-server\\build\\test\\server.spec.js",
            "passes": [
              {
                "title": "should return empty object when no public controllers on server",
                "fullTitle": "ODataServer Code coverage should return empty object when no public controllers on server",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(index_1.odata.getPublicControllers(NoServer)).to.deep.equal({});",
                "isRoot": false,
                "uuid": "34484a7e-a07e-4228-a84e-f3072d2c2ab4",
                "parentUUID": "ef81ccbe-9429-4968-b171-7bd9bb3283b8",
                "skipped": false
              },
              {
                "title": "should not allow non-OData methods",
                "fullTitle": "ODataServer Code coverage should not allow non-OData methods",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">try</span> {<br>    NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>);<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}<br><span class=\"hljs-keyword\">catch</span> (err) {<br>    expect(err.message).to.equal(<span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>}",
                "isRoot": false,
                "uuid": "0e957517-d6a9-4266-a139-59fe2941942b",
                "parentUUID": "ef81ccbe-9429-4968-b171-7bd9bb3283b8",
                "skipped": false
              },
              {
                "title": "should throw resource not found error",
                "fullTitle": "ODataServer Code coverage should throw resource not found error",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    expect(err.message).to.equal(<span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
                "isRoot": false,
                "uuid": "5ec89891-942e-4d85-bfb8-8f10e5e84f49",
                "parentUUID": "ef81ccbe-9429-4968-b171-7bd9bb3283b8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\build\\test\\server.spec.js",
        "uuid": "6f453d95-fc92-425a-a25a-084eece56167",
        "fullFile": "C:\\inetpub\\wwwroot\\odata-v4-server\\build\\test\\server.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "2cec52ea-23b1-4c2a-b93d-112ee62676fa",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should return entity set result (GET /EntitySet)",
      "fullTitle": "OData CRUD should return entity set result (GET /EntitySet)",
      "timedOut": false,
      "duration": 59,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "6f4bf852-9e7d-4b1d-9d3d-644fc1221c97",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "88f30a41-923c-471b-a59e-af878d392b74",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity set result using async function (GET /AsyncEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "a84f2f28-6a63-4a9c-87fe-330561892d0d",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "fullTitle": "OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "3d93fab1-d7cf-4f8b-b080-af3c0fc436b2",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity by key (GET /EntitySet(1))",
      "fullTitle": "OData CRUD should return entity by key (GET /EntitySet(1))",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "a25f32d2-45cd-4b65-81c5-a07e53ae2661",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should insert new entity (POST /EntitySet)",
      "fullTitle": "OData CRUD should insert new entity (POST /EntitySet)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "b1e7c72e-65b8-4d82-bf6f-7551e533d0cf",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should update entity (PUT /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity (PUT /EntitySet(1))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "dfc6e8f2-e76b-428b-89b1-b97c20479d73",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should update entity using delta (PATCH /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity using delta (PATCH /EntitySet(1))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "0ea599d8-bb18-4178-81c5-be3081eaeeee",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should delete entity (DELETE /EntitySet(1))",
      "fullTitle": "OData CRUD should delete entity (DELETE /EntitySet(1))",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "6c0bc2f5-6f18-40f0-a6dc-b9105c397b9e",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return result count (GET /EntitySet/$count)",
      "fullTitle": "OData CRUD should return result count (GET /EntitySet/$count)",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "3058857a-d3ee-418e-bc28-3e0a4e35e569",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity property (GET /EntitySet(1)/foo)",
      "fullTitle": "OData CRUD should return entity property (GET /EntitySet(1)/foo)",
      "timedOut": false,
      "duration": 12,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "14a8635c-4dfc-475a-a847-36accf1d6e0f",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
      "fullTitle": "OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "07dcd99a-a3b7-44e7-9237-89d731bb3a40",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity value (GET /EntitySet(1)/$value)",
      "fullTitle": "OData CRUD should return entity value (GET /EntitySet(1)/$value)",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "b1170ac3-d02a-4726-a3c1-84a33739b0a1",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call action import (POST /ActionImport)",
      "fullTitle": "OData CRUD should call action import (POST /ActionImport)",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "7272b91e-1136-4b0f-a0d4-5bf904201e9b",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call action import with parameters (POST /ActionImportParams)",
      "fullTitle": "OData CRUD should call action import with parameters (POST /ActionImportParams)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "54430ae1-5115-4749-9056-0cb2f910e51e",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call function import (GET /FunctionImport(value=42))",
      "fullTitle": "OData CRUD should call function import (GET /FunctionImport(value=42))",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "f4a4ced4-fc7f-41e6-9baa-2f84217c898f",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "db37a589-666f-49c2-b2d2-fad2ebd6f256",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "5c8ea5c1-f243-4dc5-889e-c3f87caddcfb",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "a797bc07-aa68-4e3c-8508-73ef6f2ffe1d",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "4de07bd1-5e3d-4115-8bfe-22cc4fa0a423",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "fullTitle": "OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "timedOut": false,
      "duration": 12,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "91f71b23-7461-4df0-a34e-929adb9044a6",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "fullTitle": "OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "c5678550-8173-466b-9413-ef6f532e8428",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "fullTitle": "OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "314e1ab4-a1eb-4aca-971c-a00660332ba8",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "fullTitle": "OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "0e6a55cd-9a83-4780-8ff0-d0c33dd05477",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "fullTitle": "OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "da007b96-4df4-4ca3-ae1d-b00981f23732",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "da5816c0-6d80-42a1-90a0-edc6bf91ff8a",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "d86c9edc-114a-4796-be3b-8c39c433e6af",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "b3b4b0e7-f964-4174-9d80-5d02ccf26d04",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "04008256-a80b-40b4-94a7-2d6cae9f3b98",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "timedOut": false,
      "duration": 63,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "f24b944c-b7ba-4d36-b894-50d2d2c44c9f",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "fullTitle": "OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "timedOut": false,
      "duration": 38,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "a6a6d848-262f-4e71-bd61-2b94a104dea3",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "13c399a3-a501-48d6-bb2f-2f5c7ea5d5f9",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "fullTitle": "OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "ee73e024-3328-409e-bbae-e53fddcf9bcd",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return result including complex type (GET /Users)",
      "fullTitle": "OData CRUD should return result including complex type (GET /Users)",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "740eac9f-7a4e-4304-9f37-ff32f350e2b5",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return complex type property (GET /Users(1)/Location)",
      "fullTitle": "OData CRUD should return complex type property (GET /Users(1)/Location)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "e29ba10f-5b19-400b-889b-8d65a9152264",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return empty object when no public controllers on server",
      "fullTitle": "Code coverage should return empty object when no public controllers on server",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(index_1.odata.getPublicControllers(NoServer)).to.deep.equal({});",
      "isRoot": false,
      "uuid": "6f1e72b4-99a1-4c82-bc6e-763791965cbf",
      "parentUUID": "ef81ccbe-9429-4968-b171-7bd9bb3283b8",
      "skipped": false
    },
    {
      "title": "should not allow non-OData methods",
      "fullTitle": "Code coverage should not allow non-OData methods",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">try</span> {<br>    NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>);<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}<br><span class=\"hljs-keyword\">catch</span> (err) {<br>    expect(err.message).to.equal(<span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>}",
      "isRoot": false,
      "uuid": "8f63177e-afe7-4330-81a3-ffaf4658ff89",
      "parentUUID": "ef81ccbe-9429-4968-b171-7bd9bb3283b8",
      "skipped": false
    },
    {
      "title": "should throw resource not found error",
      "fullTitle": "Code coverage should throw resource not found error",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    expect(err.message).to.equal(<span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
      "isRoot": false,
      "uuid": "e8d62ac9-5bd6-41ed-9ba7-8f2ddc08c04d",
      "parentUUID": "ef81ccbe-9429-4968-b171-7bd9bb3283b8",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should return entity set result (GET /EntitySet)",
      "fullTitle": "OData CRUD should return entity set result (GET /EntitySet)",
      "timedOut": false,
      "duration": 59,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "a66def72-4d76-45ee-9ddd-075baf2d2fc6",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "ae7d2976-932a-44bb-a2c7-cade4ec89684",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity set result using async function (GET /AsyncEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "bcc48c5b-18ec-479d-974a-250a8361ad16",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "fullTitle": "OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "d06d870e-8c3d-413b-aa57-f45861586f0b",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity by key (GET /EntitySet(1))",
      "fullTitle": "OData CRUD should return entity by key (GET /EntitySet(1))",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "3e537898-a6c5-40e3-80ef-db3a546cad5c",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should insert new entity (POST /EntitySet)",
      "fullTitle": "OData CRUD should insert new entity (POST /EntitySet)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "0f53927a-9dc3-432e-9adb-4df3e682851e",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should update entity (PUT /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity (PUT /EntitySet(1))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "dd11c2a1-7c6a-4f64-8ab3-7ac5efc43e02",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should update entity using delta (PATCH /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity using delta (PATCH /EntitySet(1))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "2a88cba8-2609-44de-9713-095d32891cfc",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should delete entity (DELETE /EntitySet(1))",
      "fullTitle": "OData CRUD should delete entity (DELETE /EntitySet(1))",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "4f8757cb-564e-43a5-8d2c-7dd92b8b6357",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return result count (GET /EntitySet/$count)",
      "fullTitle": "OData CRUD should return result count (GET /EntitySet/$count)",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "bfbc42b6-7df2-4bbf-9190-08fef0aad362",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity property (GET /EntitySet(1)/foo)",
      "fullTitle": "OData CRUD should return entity property (GET /EntitySet(1)/foo)",
      "timedOut": false,
      "duration": 12,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "5c06eeb9-57f0-4808-a3aa-9bd62040e5b7",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
      "fullTitle": "OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "68096a95-3267-4446-ad57-50c830c6ad10",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity value (GET /EntitySet(1)/$value)",
      "fullTitle": "OData CRUD should return entity value (GET /EntitySet(1)/$value)",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "60eb2209-9c84-47b7-b610-74b60d6844a3",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call action import (POST /ActionImport)",
      "fullTitle": "OData CRUD should call action import (POST /ActionImport)",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "5728b761-4523-4535-94ee-1f9780c20c11",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call action import with parameters (POST /ActionImportParams)",
      "fullTitle": "OData CRUD should call action import with parameters (POST /ActionImportParams)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "e56a2e27-f7dd-48e3-9eb6-b589df825294",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call function import (GET /FunctionImport(value=42))",
      "fullTitle": "OData CRUD should call function import (GET /FunctionImport(value=42))",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "b38ccf51-4371-48e5-a454-e758632bc8d9",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "6836545c-1b39-49e8-954f-cb1d1dbe3b35",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "b2b988a2-4a4a-47b7-80a2-3ee6b6cb986d",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "7f8200ac-cb25-46f7-ad11-005637b2ca38",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "6ac3b516-8e3c-4d1e-af91-a29e1db5a5c4",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "fullTitle": "OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "timedOut": false,
      "duration": 12,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "ba8ffe07-33bc-40d9-b538-66a2a6930562",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "fullTitle": "OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "e1ba809d-ed83-4121-b7e8-f123ebe8007b",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "fullTitle": "OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "6b73c086-67d3-4151-aa62-090ed07c5c60",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "fullTitle": "OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "fd18db88-db4f-4f3a-aeed-064ee9e13a8c",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "fullTitle": "OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "1fcefb84-03ab-4707-aa45-0c73b6e96dc3",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "6cfc8291-8663-4723-9eea-0f98349ec73c",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "5d1491df-1286-4d15-95fe-b53b1c4ab49c",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "66d3b92e-20c2-4c1f-b2cc-ff769c46f24b",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "19860eb9-a50b-4675-a808-52c55810c257",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "timedOut": false,
      "duration": 63,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "7a2c32ad-cc65-43bb-951c-2107d2886a69",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "fullTitle": "OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "timedOut": false,
      "duration": 38,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "ebb283da-bad4-4b8c-bab6-899f72c813e9",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "41859db5-bf4a-42c8-a4c0-3f365ee65e59",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "fullTitle": "OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "d4a59941-0024-4fc6-b9d5-ca406f82fd73",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return result including complex type (GET /Users)",
      "fullTitle": "OData CRUD should return result including complex type (GET /Users)",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "36c5da4c-0a3a-48e4-9a8a-c691dcc44085",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return complex type property (GET /Users(1)/Location)",
      "fullTitle": "OData CRUD should return complex type property (GET /Users(1)/Location)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    expect(result).to.deep.equal(compare);<br>});",
      "isRoot": false,
      "uuid": "f82783ae-05c1-4331-9e69-47de246d9b8c",
      "parentUUID": "8c745571-2602-4a12-97e6-d73221749ea1",
      "skipped": false
    },
    {
      "title": "should return empty object when no public controllers on server",
      "fullTitle": "Code coverage should return empty object when no public controllers on server",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(index_1.odata.getPublicControllers(NoServer)).to.deep.equal({});",
      "isRoot": false,
      "uuid": "bcd73e0f-686f-4aca-9505-812a97f269c2",
      "parentUUID": "ef81ccbe-9429-4968-b171-7bd9bb3283b8",
      "skipped": false
    },
    {
      "title": "should not allow non-OData methods",
      "fullTitle": "Code coverage should not allow non-OData methods",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">try</span> {<br>    NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>);<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}<br><span class=\"hljs-keyword\">catch</span> (err) {<br>    expect(err.message).to.equal(<span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>}",
      "isRoot": false,
      "uuid": "9c6923d4-7154-4c6a-a66f-5d2dae4d114b",
      "parentUUID": "ef81ccbe-9429-4968-b171-7bd9bb3283b8",
      "skipped": false
    },
    {
      "title": "should throw resource not found error",
      "fullTitle": "Code coverage should throw resource not found error",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    expect(err.message).to.equal(<span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
      "isRoot": false,
      "uuid": "55c8c58a-b79b-47bd-87e9-5f8ebd86b124",
      "parentUUID": "ef81ccbe-9429-4968-b171-7bd9bb3283b8",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}