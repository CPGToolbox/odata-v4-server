{
  "reportTitle": "OData V4 Server",
  "stats": {
    "suites": 3,
    "tests": 37,
    "passes": 37,
    "pending": 0,
    "failures": 0,
    "start": "2016-10-12T16:41:38.173Z",
    "end": "2016-10-12T16:41:38.578Z",
    "duration": 405,
    "testsRegistered": 37,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "ODataServer",
        "suites": [
          {
            "title": "OData CRUD",
            "suites": [],
            "tests": [
              {
                "title": "should return entity set result (GET /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result (GET /EntitySet)",
                "timedOut": false,
                "duration": 86,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "0d12655a-4166-455f-b26e-0ddfc5c4dab3",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "61909c40-48c0-4c81-a648-1818570c3099",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity set result using async function (GET /AsyncEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "0c53da75-878f-4894-b711-d798947fdd68",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "fullTitle": "ODataServer OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "0968af9f-8a90-4335-8797-f72a166c7c87",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity by key (GET /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should return entity by key (GET /EntitySet(1))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "63540035-903c-45e2-98ea-aaed8db8765d",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should insert new entity (POST /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should insert new entity (POST /EntitySet)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "639cc00f-301d-4e16-a936-a0b0fcc8977f",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should update entity (PUT /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity (PUT /EntitySet(1))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "d3347d22-5abf-45a7-a2de-aff9b197af9c",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should update entity using delta (PATCH /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity using delta (PATCH /EntitySet(1))",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "3ada8ac0-0c6d-4b51-ba7c-7a731fbfde9d",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should delete entity (DELETE /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should delete entity (DELETE /EntitySet(1))",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "fe30d0bc-27c3-46f2-8635-6c7b26c13694",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return result count (GET /EntitySet/$count)",
                "fullTitle": "ODataServer OData CRUD should return result count (GET /EntitySet/$count)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "51f1a5dc-c145-4941-936f-29317d4320fd",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity property (GET /EntitySet(1)/foo)",
                "fullTitle": "ODataServer OData CRUD should return entity property (GET /EntitySet(1)/foo)",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "8c4bf316-1ef0-42ed-9220-45d6aefdabea",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "1fb4fcd2-a3f5-4c4f-8da2-d64ed5247226",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity value (GET /EntitySet(1)/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity value (GET /EntitySet(1)/$value)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "03c07a60-33d8-47a3-b189-3738f4d3fb28",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call action import (POST /ActionImport)",
                "fullTitle": "ODataServer OData CRUD should call action import (POST /ActionImport)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "e2a03549-6341-4c16-b003-ac2b35b5d2a2",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call function import (GET /FunctionImport(value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import (GET /FunctionImport(value=42))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "481074fb-668a-429b-b480-fd59f05ae58d",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "4a63c920-4fde-4a6e-b489-a8fc8ffef175",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "08449fb6-ad49-416a-8b6a-c18265b31995",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "35f22e2f-52a1-494c-b0a8-d5d4a01252b6",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "d86c2511-bfa9-420a-84a7-484ac3356fa9",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "fullTitle": "ODataServer OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "83bb8875-4fb7-414d-afc6-7d47c65054de",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "fullTitle": "ODataServer OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "699e22a6-5e00-452a-adcc-da7da1341506",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "fullTitle": "ODataServer OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "77842780-fb4d-411c-9915-804cf77cc9d6",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "fullTitle": "ODataServer OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "35c59266-d2c8-4132-b0a5-b4d6b0e8c426",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "fullTitle": "ODataServer OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "ee595276-2771-49d1-b51e-295154856ab5",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "29834ce2-6800-4228-8413-e763d73c15ec",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "c2fede4a-51c7-4ec3-b988-656cd59cdc77",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "170a39a0-6827-496d-b115-a49ee845229f",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "78c062ae-b1d6-4c4a-8382-1aa733de50d1",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "timedOut": false,
                "duration": 43,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "8312f1db-a0c9-4685-ae21-3edc418c97ab",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "timedOut": false,
                "duration": 15,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "e7597327-a47d-4c0d-ba83-1713a320841e",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "0eca0c53-94b5-42b3-b09b-c43387a3f756",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "fullTitle": "ODataServer OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "e7d16cdc-c3ff-4216-a3e1-a125c795159e",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return result including complex type (GET /Users)",
                "fullTitle": "ODataServer OData CRUD should return result including complex type (GET /Users)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "8762e646-c0c1-4838-872b-c41b710ea909",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return complex type property (GET /Users(1)/Location)",
                "fullTitle": "ODataServer OData CRUD should return complex type property (GET /Users(1)/Location)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "e86298e5-3de6-403c-a78d-0e3576f3021d",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\server.spec.js",
            "uuid": "43d81cdb-f313-4257-8104-f22d4037fc2a",
            "fullFile": "C:\\inetpub\\wwwroot\\odata-v4-controller\\test\\server.spec.js",
            "passes": [
              {
                "title": "should return entity set result (GET /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result (GET /EntitySet)",
                "timedOut": false,
                "duration": 86,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "0d12655a-4166-455f-b26e-0ddfc5c4dab3",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "61909c40-48c0-4c81-a648-1818570c3099",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity set result using async function (GET /AsyncEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "0c53da75-878f-4894-b711-d798947fdd68",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "fullTitle": "ODataServer OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "0968af9f-8a90-4335-8797-f72a166c7c87",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity by key (GET /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should return entity by key (GET /EntitySet(1))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "63540035-903c-45e2-98ea-aaed8db8765d",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should insert new entity (POST /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should insert new entity (POST /EntitySet)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "639cc00f-301d-4e16-a936-a0b0fcc8977f",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should update entity (PUT /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity (PUT /EntitySet(1))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "d3347d22-5abf-45a7-a2de-aff9b197af9c",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should update entity using delta (PATCH /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity using delta (PATCH /EntitySet(1))",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "3ada8ac0-0c6d-4b51-ba7c-7a731fbfde9d",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should delete entity (DELETE /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should delete entity (DELETE /EntitySet(1))",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "fe30d0bc-27c3-46f2-8635-6c7b26c13694",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return result count (GET /EntitySet/$count)",
                "fullTitle": "ODataServer OData CRUD should return result count (GET /EntitySet/$count)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "51f1a5dc-c145-4941-936f-29317d4320fd",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity property (GET /EntitySet(1)/foo)",
                "fullTitle": "ODataServer OData CRUD should return entity property (GET /EntitySet(1)/foo)",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "8c4bf316-1ef0-42ed-9220-45d6aefdabea",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "1fb4fcd2-a3f5-4c4f-8da2-d64ed5247226",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity value (GET /EntitySet(1)/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity value (GET /EntitySet(1)/$value)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "03c07a60-33d8-47a3-b189-3738f4d3fb28",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call action import (POST /ActionImport)",
                "fullTitle": "ODataServer OData CRUD should call action import (POST /ActionImport)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "e2a03549-6341-4c16-b003-ac2b35b5d2a2",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call function import (GET /FunctionImport(value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import (GET /FunctionImport(value=42))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "481074fb-668a-429b-b480-fd59f05ae58d",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "4a63c920-4fde-4a6e-b489-a8fc8ffef175",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "08449fb6-ad49-416a-8b6a-c18265b31995",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "35f22e2f-52a1-494c-b0a8-d5d4a01252b6",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "d86c2511-bfa9-420a-84a7-484ac3356fa9",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "fullTitle": "ODataServer OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "83bb8875-4fb7-414d-afc6-7d47c65054de",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "fullTitle": "ODataServer OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "699e22a6-5e00-452a-adcc-da7da1341506",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "fullTitle": "ODataServer OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "77842780-fb4d-411c-9915-804cf77cc9d6",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "fullTitle": "ODataServer OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "35c59266-d2c8-4132-b0a5-b4d6b0e8c426",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "fullTitle": "ODataServer OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "ee595276-2771-49d1-b51e-295154856ab5",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "29834ce2-6800-4228-8413-e763d73c15ec",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "c2fede4a-51c7-4ec3-b988-656cd59cdc77",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "170a39a0-6827-496d-b115-a49ee845229f",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "78c062ae-b1d6-4c4a-8382-1aa733de50d1",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "timedOut": false,
                "duration": 43,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "8312f1db-a0c9-4685-ae21-3edc418c97ab",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "timedOut": false,
                "duration": 15,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "e7597327-a47d-4c0d-ba83-1713a320841e",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "0eca0c53-94b5-42b3-b09b-c43387a3f756",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "fullTitle": "ODataServer OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "e7d16cdc-c3ff-4216-a3e1-a125c795159e",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return result including complex type (GET /Users)",
                "fullTitle": "ODataServer OData CRUD should return result including complex type (GET /Users)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "8762e646-c0c1-4838-872b-c41b710ea909",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              },
              {
                "title": "should return complex type property (GET /Users(1)/Location)",
                "fullTitle": "ODataServer OData CRUD should return complex type property (GET /Users(1)/Location)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "e86298e5-3de6-403c-a78d-0e3576f3021d",
                "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 34,
            "totalPasses": 34,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 269
          },
          {
            "title": "Code coverage",
            "suites": [],
            "tests": [
              {
                "title": "should return empty object when no public controllers on server",
                "fullTitle": "ODataServer Code coverage should return empty object when no public controllers on server",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(index_1.odata.getPublicControllers(NoServer)).to.deep.equal({});",
                "isRoot": false,
                "uuid": "bf6792b6-fdd9-4548-9249-8f20a2a3aa2b",
                "parentUUID": "ed74e286-67f9-4141-96f6-1233914b2e3d",
                "skipped": false
              },
              {
                "title": "should not allow non-OData methods",
                "fullTitle": "ODataServer Code coverage should not allow non-OData methods",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}, (err) =&gt; {<br>    chai_1.expect(err.message).to.equal(<span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>});",
                "isRoot": false,
                "uuid": "0c8c84c0-cd6c-491c-b651-6d82b35328da",
                "parentUUID": "ed74e286-67f9-4141-96f6-1233914b2e3d",
                "skipped": false
              },
              {
                "title": "should throw resource not found error",
                "fullTitle": "ODataServer Code coverage should throw resource not found error",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    chai_1.expect(err.message).to.equal(<span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
                "isRoot": false,
                "uuid": "779b5bab-1439-4c9e-b4cf-af9deeb6648e",
                "parentUUID": "ed74e286-67f9-4141-96f6-1233914b2e3d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\server.spec.js",
            "uuid": "ed74e286-67f9-4141-96f6-1233914b2e3d",
            "fullFile": "C:\\inetpub\\wwwroot\\odata-v4-controller\\test\\server.spec.js",
            "passes": [
              {
                "title": "should return empty object when no public controllers on server",
                "fullTitle": "ODataServer Code coverage should return empty object when no public controllers on server",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(index_1.odata.getPublicControllers(NoServer)).to.deep.equal({});",
                "isRoot": false,
                "uuid": "bf6792b6-fdd9-4548-9249-8f20a2a3aa2b",
                "parentUUID": "ed74e286-67f9-4141-96f6-1233914b2e3d",
                "skipped": false
              },
              {
                "title": "should not allow non-OData methods",
                "fullTitle": "ODataServer Code coverage should not allow non-OData methods",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}, (err) =&gt; {<br>    chai_1.expect(err.message).to.equal(<span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>});",
                "isRoot": false,
                "uuid": "0c8c84c0-cd6c-491c-b651-6d82b35328da",
                "parentUUID": "ed74e286-67f9-4141-96f6-1233914b2e3d",
                "skipped": false
              },
              {
                "title": "should throw resource not found error",
                "fullTitle": "ODataServer Code coverage should throw resource not found error",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    chai_1.expect(err.message).to.equal(<span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
                "isRoot": false,
                "uuid": "779b5bab-1439-4c9e-b4cf-af9deeb6648e",
                "parentUUID": "ed74e286-67f9-4141-96f6-1233914b2e3d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 10
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\server.spec.js",
        "uuid": "b2cf0df2-edbd-4b70-9226-dac08d141c0f",
        "fullFile": "C:\\inetpub\\wwwroot\\odata-v4-controller\\test\\server.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "4689d239-005c-4d9b-a3ec-9091f3b84f38",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should return entity set result (GET /EntitySet)",
      "fullTitle": "OData CRUD should return entity set result (GET /EntitySet)",
      "timedOut": false,
      "duration": 86,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "d3a4a9f9-a44d-4c4b-b481-8fe3dead119d",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "c0e4078f-ea77-47c4-aa0c-009ede8b54be",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity set result using async function (GET /AsyncEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "c60037d8-bd19-451f-8749-c91a0a912f07",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "fullTitle": "OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "0b172507-56b9-4f74-94ac-9da0c7244717",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity by key (GET /EntitySet(1))",
      "fullTitle": "OData CRUD should return entity by key (GET /EntitySet(1))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "ea611e5f-0002-45d1-afec-06adc328a978",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should insert new entity (POST /EntitySet)",
      "fullTitle": "OData CRUD should insert new entity (POST /EntitySet)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "b377881c-6b50-4226-8472-2ecea6918679",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should update entity (PUT /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity (PUT /EntitySet(1))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "c57906d6-6939-42a6-9f9d-1df264e75da0",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should update entity using delta (PATCH /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity using delta (PATCH /EntitySet(1))",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "430763f6-b631-4d0f-bbe0-025eb7db5f9d",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should delete entity (DELETE /EntitySet(1))",
      "fullTitle": "OData CRUD should delete entity (DELETE /EntitySet(1))",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "a4c3bcdb-a3f4-4848-b24a-3e8e96c88798",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return result count (GET /EntitySet/$count)",
      "fullTitle": "OData CRUD should return result count (GET /EntitySet/$count)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "d8d9e5cd-6ab2-4ae2-b487-d9ab6843eaf0",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity property (GET /EntitySet(1)/foo)",
      "fullTitle": "OData CRUD should return entity property (GET /EntitySet(1)/foo)",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "c752f4ce-054b-471f-adb3-bacd01821861",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
      "fullTitle": "OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "afa867f6-2bbc-4224-ab43-c93af7b82dce",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity value (GET /EntitySet(1)/$value)",
      "fullTitle": "OData CRUD should return entity value (GET /EntitySet(1)/$value)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "b1eecb73-91ac-4d0d-9e6c-60d530fc190f",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call action import (POST /ActionImport)",
      "fullTitle": "OData CRUD should call action import (POST /ActionImport)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "fe0e58ba-b296-43fd-8309-3f0b1137085d",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call function import (GET /FunctionImport(value=42))",
      "fullTitle": "OData CRUD should call function import (GET /FunctionImport(value=42))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "5c8aa43d-4820-4bcb-ab1b-4955cc435d76",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "571fac20-2ed3-4e03-9fae-356790c98453",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "20706b92-ff40-4561-93aa-7e3715fe0d6b",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "546e50ee-146a-4538-8196-317626ce2896",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "5277ebed-3752-4686-9416-b6d5ace6c146",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "fullTitle": "OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "35abb3c6-e832-4349-8f5e-4e590b3b6a2a",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "fullTitle": "OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "cca4ec45-8f7e-4dc2-816f-6d07178ae575",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "fullTitle": "OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "778887aa-2866-48d1-897e-4c13ef4e754d",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "fullTitle": "OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "dfc4af1f-5fd2-4220-9696-9334051de8b1",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "fullTitle": "OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "cb90be3f-6a37-4341-bd9b-8a7a6ec03de5",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "bcb03206-7403-42b0-a506-422de3ec0c2d",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "eb5d2b20-859e-42f3-9576-6899d039b29e",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "1c1a8619-90e1-4142-b3f1-c4708e230179",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "dca422bc-9020-4152-8f30-f3c7a7445a46",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "timedOut": false,
      "duration": 43,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "1892a0a1-5aee-4135-b3fb-48eb32afdfb6",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "fullTitle": "OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "b97d7345-a0de-4418-a96b-13dedf7c3f3c",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "a392daaa-0d56-4e17-a425-4b17eba0076d",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "fullTitle": "OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "024e104c-04ae-4d34-9cda-5d08044a8aa7",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return result including complex type (GET /Users)",
      "fullTitle": "OData CRUD should return result including complex type (GET /Users)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "45c6f7d9-965a-4f5e-b088-bf059d629ebe",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return complex type property (GET /Users(1)/Location)",
      "fullTitle": "OData CRUD should return complex type property (GET /Users(1)/Location)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "3f45e066-56e0-4149-a16c-ea0a86a9fd9c",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return empty object when no public controllers on server",
      "fullTitle": "Code coverage should return empty object when no public controllers on server",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai_1.expect(index_1.odata.getPublicControllers(NoServer)).to.deep.equal({});",
      "isRoot": false,
      "uuid": "5835a30b-0245-4b81-ab0c-8ebdfe480d44",
      "parentUUID": "ed74e286-67f9-4141-96f6-1233914b2e3d",
      "skipped": false
    },
    {
      "title": "should not allow non-OData methods",
      "fullTitle": "Code coverage should not allow non-OData methods",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}, (err) =&gt; {<br>    chai_1.expect(err.message).to.equal(<span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>});",
      "isRoot": false,
      "uuid": "9f71bcc7-cef2-494b-9142-4c6b3ad16dcf",
      "parentUUID": "ed74e286-67f9-4141-96f6-1233914b2e3d",
      "skipped": false
    },
    {
      "title": "should throw resource not found error",
      "fullTitle": "Code coverage should throw resource not found error",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    chai_1.expect(err.message).to.equal(<span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
      "isRoot": false,
      "uuid": "13f6dcf9-d052-4077-acf6-4a2af2562344",
      "parentUUID": "ed74e286-67f9-4141-96f6-1233914b2e3d",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should return entity set result (GET /EntitySet)",
      "fullTitle": "OData CRUD should return entity set result (GET /EntitySet)",
      "timedOut": false,
      "duration": 86,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "b9f93abb-2424-44ec-b51d-ba637b51a037",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "4eb965a9-a702-4cf6-be3d-829513630917",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity set result using async function (GET /AsyncEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "1d211bff-6c6d-4ac7-9b35-bc6f381d6ad7",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "fullTitle": "OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "f7c88a84-f358-4e28-88b2-c9565586fe80",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity by key (GET /EntitySet(1))",
      "fullTitle": "OData CRUD should return entity by key (GET /EntitySet(1))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "f842125e-4970-45ce-bbf7-8e6aab9cbb9d",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should insert new entity (POST /EntitySet)",
      "fullTitle": "OData CRUD should insert new entity (POST /EntitySet)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "143ead95-bcc8-4ba3-b9f3-45e2f5655147",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should update entity (PUT /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity (PUT /EntitySet(1))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "c771a164-8256-4973-bf54-815c601c0fcd",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should update entity using delta (PATCH /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity using delta (PATCH /EntitySet(1))",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "12509ddc-0649-4641-b4d6-a242ddbff18e",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should delete entity (DELETE /EntitySet(1))",
      "fullTitle": "OData CRUD should delete entity (DELETE /EntitySet(1))",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "aa0c15b5-cd67-4aac-8c2b-4a7d68778918",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return result count (GET /EntitySet/$count)",
      "fullTitle": "OData CRUD should return result count (GET /EntitySet/$count)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "90c6d83f-9701-4039-8e8a-8e68d0db1142",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity property (GET /EntitySet(1)/foo)",
      "fullTitle": "OData CRUD should return entity property (GET /EntitySet(1)/foo)",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "2f5755bf-b44f-4886-ab67-7fb807139b8c",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
      "fullTitle": "OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "9120b78d-36a7-47ee-aedb-7b3eb40916b0",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity value (GET /EntitySet(1)/$value)",
      "fullTitle": "OData CRUD should return entity value (GET /EntitySet(1)/$value)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "91a717e5-e82c-4aed-8255-00ea082a1c1c",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call action import (POST /ActionImport)",
      "fullTitle": "OData CRUD should call action import (POST /ActionImport)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "a007db6b-3fea-4843-9c67-116c113b7409",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call function import (GET /FunctionImport(value=42))",
      "fullTitle": "OData CRUD should call function import (GET /FunctionImport(value=42))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "624ae038-2504-4ce9-a657-dfffeb86a31b",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "24597bbf-0b84-4621-be5a-4e5462826bbf",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "2288ab04-26c8-4e26-961e-09986ab373b3",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "e512d9c6-f718-444b-af8e-b698528adb29",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "eb30c5dc-1b18-462a-85d5-d9ec5b10f32c",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "fullTitle": "OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "b98cdff8-9d9d-496f-9eba-f564f7ca0c04",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "fullTitle": "OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "efd2fb31-d5db-4e42-ac8c-c9d8c3b739ed",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "fullTitle": "OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "5b6e2d08-4792-4366-9d27-f7e9bce70528",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "fullTitle": "OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "4966181e-c8ae-45fd-810d-748c1beafbd5",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "fullTitle": "OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "73e01264-b2b4-42f7-96d6-8764f03bc059",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "3b35cc14-65d9-4d52-876a-6fd5f740becd",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "6b18a73a-b1c3-4568-9465-d93583ce3195",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "cd4d0864-0122-4286-a9b6-0a4aaf6a7cda",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "40f05dbf-098f-49a0-a8d1-6fcd11680736",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "timedOut": false,
      "duration": 43,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "a98eb51c-69aa-4564-adcc-b6d9ac6394bf",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "fullTitle": "OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "f2493ffb-4898-4e8b-b629-08b216daa93f",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "88e8660d-2c75-499d-b4fe-22e72b55128a",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "fullTitle": "OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "b8327b24-a583-4bfe-8d33-14014c35f475",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return result including complex type (GET /Users)",
      "fullTitle": "OData CRUD should return result including complex type (GET /Users)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "6dcfc87f-e64e-41db-b84f-d3ef66b1aa41",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return complex type property (GET /Users(1)/Location)",
      "fullTitle": "OData CRUD should return complex type property (GET /Users(1)/Location)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "a1e4ad9e-1ce9-457f-a4bd-d1e8f61096aa",
      "parentUUID": "43d81cdb-f313-4257-8104-f22d4037fc2a",
      "skipped": false
    },
    {
      "title": "should return empty object when no public controllers on server",
      "fullTitle": "Code coverage should return empty object when no public controllers on server",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai_1.expect(index_1.odata.getPublicControllers(NoServer)).to.deep.equal({});",
      "isRoot": false,
      "uuid": "4c98f011-0c9b-4d3e-ad64-e3572297926c",
      "parentUUID": "ed74e286-67f9-4141-96f6-1233914b2e3d",
      "skipped": false
    },
    {
      "title": "should not allow non-OData methods",
      "fullTitle": "Code coverage should not allow non-OData methods",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}, (err) =&gt; {<br>    chai_1.expect(err.message).to.equal(<span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>});",
      "isRoot": false,
      "uuid": "9a83cba4-29e5-473c-b8ef-d2f44916d198",
      "parentUUID": "ed74e286-67f9-4141-96f6-1233914b2e3d",
      "skipped": false
    },
    {
      "title": "should throw resource not found error",
      "fullTitle": "Code coverage should throw resource not found error",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    chai_1.expect(err.message).to.equal(<span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
      "isRoot": false,
      "uuid": "beb9dd85-c9d4-4694-a51c-77032024b532",
      "parentUUID": "ed74e286-67f9-4141-96f6-1233914b2e3d",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}