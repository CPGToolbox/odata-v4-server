{
  "reportTitle": "OData V4 Server",
  "stats": {
    "suites": 3,
    "tests": 37,
    "passes": 37,
    "pending": 0,
    "failures": 0,
    "start": "2016-10-15T14:40:04.071Z",
    "end": "2016-10-15T14:40:04.553Z",
    "duration": 482,
    "testsRegistered": 37,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "ODataServer",
        "suites": [
          {
            "title": "OData CRUD",
            "suites": [],
            "tests": [
              {
                "title": "should return entity set result (GET /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result (GET /EntitySet)",
                "timedOut": false,
                "duration": 84,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "8750ad63-cb97-4092-b171-ea3f41d6fb9b",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "f942988f-0afa-434e-9284-6f5cc0328261",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity set result using async function (GET /AsyncEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "789a0e16-b962-401b-8603-05ec8f456de2",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "fullTitle": "ODataServer OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "timedOut": false,
                "duration": 22,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "8db52226-8c9c-4dba-bbb7-09863ecc42f1",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity by key (GET /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should return entity by key (GET /EntitySet(1))",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "938289e9-e386-463a-8459-b25512c3097c",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should insert new entity (POST /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should insert new entity (POST /EntitySet)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "47c4e5a1-64a5-4fab-86cf-08da79311856",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should update entity (PUT /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity (PUT /EntitySet(1))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "9a574678-746d-4181-b75a-3ad3f9dbc813",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should update entity using delta (PATCH /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity using delta (PATCH /EntitySet(1))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "2ae00b04-fdec-4346-8766-3f9aefdcdd06",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should delete entity (DELETE /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should delete entity (DELETE /EntitySet(1))",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "6ad570e4-3741-4f8e-97d1-aa2a01c8bd6e",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return result count (GET /EntitySet/$count)",
                "fullTitle": "ODataServer OData CRUD should return result count (GET /EntitySet/$count)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "106634ca-53e6-48da-901e-2e951f4f3d13",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity property (GET /EntitySet(1)/foo)",
                "fullTitle": "ODataServer OData CRUD should return entity property (GET /EntitySet(1)/foo)",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "cf259262-cebb-40e7-9a31-3af4d273cc93",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "0b1fedb7-e87f-4c50-90cf-9133c91a50be",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity value (GET /EntitySet(1)/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity value (GET /EntitySet(1)/$value)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "027e36c0-3977-4e28-bb16-1fb8c8d138bd",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call action import (POST /ActionImport)",
                "fullTitle": "ODataServer OData CRUD should call action import (POST /ActionImport)",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "207342f1-b7cb-47c4-ae68-70d7a2223e38",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call function import (GET /FunctionImport(value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import (GET /FunctionImport(value=42))",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "658821d5-1eda-4959-b3f6-5ad3d693bdda",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "d6e4e44b-3889-4f65-bf89-e0304c911f67",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "4be08c45-6856-4774-ad27-f35a7abd0d23",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "6994d465-770f-4a95-8393-0d74f254df13",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "cad9d0eb-af8a-4c73-b77a-1c25daf6406b",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "fullTitle": "ODataServer OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "fb18a351-f6ab-447a-a5a1-cfba76f59ee3",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "fullTitle": "ODataServer OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "c6984f19-f194-453a-9087-e5b08a4b283b",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "fullTitle": "ODataServer OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "545b3254-573c-4fba-83b3-4f854567a41b",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "fullTitle": "ODataServer OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "894bf6e9-45d9-42fb-a813-d1df26a1b2a2",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "fullTitle": "ODataServer OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "af317862-18b2-4bd4-ad61-2e22d5d827b4",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "53708b18-0d41-4239-84f8-ee3b07ae2152",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "bf40e135-5c8f-44c5-a1ac-bd71e074a3ca",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "e71d3e48-5a79-4047-b582-65d3514a5deb",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "9e20e943-5fb5-44ce-ab3a-da88166014af",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "timedOut": false,
                "duration": 33,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "e0aeb839-efa7-4f7b-829f-fbeeec4ffe3b",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "timedOut": false,
                "duration": 28,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "37ddc7af-2f73-45a3-b4a7-f35519dd9041",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "4021a784-a978-4170-bb7e-3d2cec708b59",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "fullTitle": "ODataServer OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "38c94d2a-e214-4aae-994e-145c5b37d480",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return result including complex type (GET /Users)",
                "fullTitle": "ODataServer OData CRUD should return result including complex type (GET /Users)",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "d21973a7-5bf2-4841-9acb-f8b64fafc8fd",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return complex type property (GET /Users(1)/Location)",
                "fullTitle": "ODataServer OData CRUD should return complex type property (GET /Users(1)/Location)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "f5d0cd5a-bbc0-4156-8fd3-98597c1abe9f",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\server.spec.js",
            "uuid": "4624656c-9d09-4413-bc79-2fea846272a8",
            "fullFile": "C:\\inetpub\\wwwroot\\odata-v4-controller\\test\\server.spec.js",
            "passes": [
              {
                "title": "should return entity set result (GET /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result (GET /EntitySet)",
                "timedOut": false,
                "duration": 84,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "8750ad63-cb97-4092-b171-ea3f41d6fb9b",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "f942988f-0afa-434e-9284-6f5cc0328261",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity set result using async function (GET /AsyncEntitySet)",
                "fullTitle": "ODataServer OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "789a0e16-b962-401b-8603-05ec8f456de2",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "fullTitle": "ODataServer OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
                "timedOut": false,
                "duration": 22,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "8db52226-8c9c-4dba-bbb7-09863ecc42f1",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity by key (GET /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should return entity by key (GET /EntitySet(1))",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "938289e9-e386-463a-8459-b25512c3097c",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should insert new entity (POST /EntitySet)",
                "fullTitle": "ODataServer OData CRUD should insert new entity (POST /EntitySet)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "47c4e5a1-64a5-4fab-86cf-08da79311856",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should update entity (PUT /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity (PUT /EntitySet(1))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "9a574678-746d-4181-b75a-3ad3f9dbc813",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should update entity using delta (PATCH /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should update entity using delta (PATCH /EntitySet(1))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "2ae00b04-fdec-4346-8766-3f9aefdcdd06",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should delete entity (DELETE /EntitySet(1))",
                "fullTitle": "ODataServer OData CRUD should delete entity (DELETE /EntitySet(1))",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "6ad570e4-3741-4f8e-97d1-aa2a01c8bd6e",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return result count (GET /EntitySet/$count)",
                "fullTitle": "ODataServer OData CRUD should return result count (GET /EntitySet/$count)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "106634ca-53e6-48da-901e-2e951f4f3d13",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity property (GET /EntitySet(1)/foo)",
                "fullTitle": "ODataServer OData CRUD should return entity property (GET /EntitySet(1)/foo)",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "cf259262-cebb-40e7-9a31-3af4d273cc93",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "0b1fedb7-e87f-4c50-90cf-9133c91a50be",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity value (GET /EntitySet(1)/$value)",
                "fullTitle": "ODataServer OData CRUD should return entity value (GET /EntitySet(1)/$value)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "027e36c0-3977-4e28-bb16-1fb8c8d138bd",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call action import (POST /ActionImport)",
                "fullTitle": "ODataServer OData CRUD should call action import (POST /ActionImport)",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "207342f1-b7cb-47c4-ae68-70d7a2223e38",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call function import (GET /FunctionImport(value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import (GET /FunctionImport(value=42))",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "658821d5-1eda-4959-b3f6-5ad3d693bdda",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "d6e4e44b-3889-4f65-bf89-e0304c911f67",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "4be08c45-6856-4774-ad27-f35a7abd0d23",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "6994d465-770f-4a95-8393-0d74f254df13",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "cad9d0eb-af8a-4c73-b77a-1c25daf6406b",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "fullTitle": "ODataServer OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "fb18a351-f6ab-447a-a5a1-cfba76f59ee3",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "fullTitle": "ODataServer OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "c6984f19-f194-453a-9087-e5b08a4b283b",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "fullTitle": "ODataServer OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "545b3254-573c-4fba-83b3-4f854567a41b",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "fullTitle": "ODataServer OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "894bf6e9-45d9-42fb-a813-d1df26a1b2a2",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "fullTitle": "ODataServer OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "af317862-18b2-4bd4-ad61-2e22d5d827b4",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "fullTitle": "ODataServer OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "53708b18-0d41-4239-84f8-ee3b07ae2152",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "bf40e135-5c8f-44c5-a1ac-bd71e074a3ca",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "e71d3e48-5a79-4047-b582-65d3514a5deb",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "fullTitle": "ODataServer OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "9e20e943-5fb5-44ce-ab3a-da88166014af",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
                "timedOut": false,
                "duration": 33,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "e0aeb839-efa7-4f7b-829f-fbeeec4ffe3b",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
                "timedOut": false,
                "duration": 28,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "37ddc7af-2f73-45a3-b4a7-f35519dd9041",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "fullTitle": "ODataServer OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "4021a784-a978-4170-bb7e-3d2cec708b59",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "fullTitle": "ODataServer OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "38c94d2a-e214-4aae-994e-145c5b37d480",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return result including complex type (GET /Users)",
                "fullTitle": "ODataServer OData CRUD should return result including complex type (GET /Users)",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "d21973a7-5bf2-4841-9acb-f8b64fafc8fd",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              },
              {
                "title": "should return complex type property (GET /Users(1)/Location)",
                "fullTitle": "ODataServer OData CRUD should return complex type property (GET /Users(1)/Location)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
                "isRoot": false,
                "uuid": "f5d0cd5a-bbc0-4156-8fd3-98597c1abe9f",
                "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 34,
            "totalPasses": 34,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 316
          },
          {
            "title": "Code coverage",
            "suites": [],
            "tests": [
              {
                "title": "should return empty object when no public controllers on server",
                "fullTitle": "ODataServer Code coverage should return empty object when no public controllers on server",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(index_1.odata.getPublicControllers(NoServer)).to.deep.equal({});",
                "isRoot": false,
                "uuid": "a2c490c7-43ce-484e-83e7-9ab22b2bb802",
                "parentUUID": "1dca2176-3987-41a8-861d-03b6982de8ee",
                "skipped": false
              },
              {
                "title": "should not allow non-OData methods",
                "fullTitle": "ODataServer Code coverage should not allow non-OData methods",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}, (err) =&gt; {<br>    chai_1.expect(err.message).to.equal(<span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>});",
                "isRoot": false,
                "uuid": "702a80bd-15b1-4bb1-8513-d62cc4501f63",
                "parentUUID": "1dca2176-3987-41a8-861d-03b6982de8ee",
                "skipped": false
              },
              {
                "title": "should throw resource not found error",
                "fullTitle": "ODataServer Code coverage should throw resource not found error",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    chai_1.expect(err.message).to.equal(<span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
                "isRoot": false,
                "uuid": "59bf889c-4f9e-46ae-89a3-8e84e1a9358b",
                "parentUUID": "1dca2176-3987-41a8-861d-03b6982de8ee",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\server.spec.js",
            "uuid": "1dca2176-3987-41a8-861d-03b6982de8ee",
            "fullFile": "C:\\inetpub\\wwwroot\\odata-v4-controller\\test\\server.spec.js",
            "passes": [
              {
                "title": "should return empty object when no public controllers on server",
                "fullTitle": "ODataServer Code coverage should return empty object when no public controllers on server",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(index_1.odata.getPublicControllers(NoServer)).to.deep.equal({});",
                "isRoot": false,
                "uuid": "a2c490c7-43ce-484e-83e7-9ab22b2bb802",
                "parentUUID": "1dca2176-3987-41a8-861d-03b6982de8ee",
                "skipped": false
              },
              {
                "title": "should not allow non-OData methods",
                "fullTitle": "ODataServer Code coverage should not allow non-OData methods",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}, (err) =&gt; {<br>    chai_1.expect(err.message).to.equal(<span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>});",
                "isRoot": false,
                "uuid": "702a80bd-15b1-4bb1-8513-d62cc4501f63",
                "parentUUID": "1dca2176-3987-41a8-861d-03b6982de8ee",
                "skipped": false
              },
              {
                "title": "should throw resource not found error",
                "fullTitle": "ODataServer Code coverage should throw resource not found error",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    chai_1.expect(err.message).to.equal(<span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
                "isRoot": false,
                "uuid": "59bf889c-4f9e-46ae-89a3-8e84e1a9358b",
                "parentUUID": "1dca2176-3987-41a8-861d-03b6982de8ee",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\server.spec.js",
        "uuid": "f0d8cd8a-b205-4178-a288-4cf0272ecced",
        "fullFile": "C:\\inetpub\\wwwroot\\odata-v4-controller\\test\\server.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "0900b05c-3376-4155-a18c-2aaf24604d66",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should return entity set result (GET /EntitySet)",
      "fullTitle": "OData CRUD should return entity set result (GET /EntitySet)",
      "timedOut": false,
      "duration": 84,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "4e0f3d32-d7b6-446c-9d13-3cfc653f557f",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "e1067925-e297-4959-877f-6bbf6f704e54",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity set result using async function (GET /AsyncEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "294b825a-8b3f-40f5-860d-7ed99b1ff921",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "fullTitle": "OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "ce636b29-316d-4747-afbd-ec0ad6aafeb1",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity by key (GET /EntitySet(1))",
      "fullTitle": "OData CRUD should return entity by key (GET /EntitySet(1))",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "d0ed3cf0-a082-424a-b876-9109fa1c6722",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should insert new entity (POST /EntitySet)",
      "fullTitle": "OData CRUD should insert new entity (POST /EntitySet)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "ca48b4e3-46b9-4bc3-b9cf-08daf3b888b2",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should update entity (PUT /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity (PUT /EntitySet(1))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "23631479-11a2-4174-af97-9271cc06dafa",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should update entity using delta (PATCH /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity using delta (PATCH /EntitySet(1))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "0b195bed-c1b4-4d8b-9565-1a2f83eca116",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should delete entity (DELETE /EntitySet(1))",
      "fullTitle": "OData CRUD should delete entity (DELETE /EntitySet(1))",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "abb1402f-bedc-404c-8c87-3bb5a886c847",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return result count (GET /EntitySet/$count)",
      "fullTitle": "OData CRUD should return result count (GET /EntitySet/$count)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "95a54ef9-8a9e-47fc-9079-24364ad138ad",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity property (GET /EntitySet(1)/foo)",
      "fullTitle": "OData CRUD should return entity property (GET /EntitySet(1)/foo)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "18183069-99f2-4150-8c4c-6c817da2c7ec",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
      "fullTitle": "OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "3e734c14-6be0-43b5-b0e1-648f4919a9e0",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity value (GET /EntitySet(1)/$value)",
      "fullTitle": "OData CRUD should return entity value (GET /EntitySet(1)/$value)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "3a7e5087-3cac-4a13-81b9-6d9f99373793",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call action import (POST /ActionImport)",
      "fullTitle": "OData CRUD should call action import (POST /ActionImport)",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "084ce066-7ab7-466d-ae82-d4c37569fef9",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call function import (GET /FunctionImport(value=42))",
      "fullTitle": "OData CRUD should call function import (GET /FunctionImport(value=42))",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "ea4c087a-24af-42b4-8d04-22138d079f7f",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "f8addef2-bfbf-4d84-818e-a77217f962f2",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "5a52c81b-b69e-40c1-aa9b-bbf8d5c6149f",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "4f741d23-0473-440c-bfad-9da34eb1193f",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "263540e2-05d4-4607-90d3-0030ace625db",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "fullTitle": "OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "b1b830ed-fbb7-45a2-a181-c457d1b9f1ae",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "fullTitle": "OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "bfdc7306-bde3-4d9e-bff9-85b297d4ba00",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "fullTitle": "OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "a8ad14f5-6157-4016-b7d0-5fa284318cfe",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "fullTitle": "OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "1bcb239a-7ea2-4431-ab37-bcbf47218dda",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "fullTitle": "OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "a84c1c8a-f31c-4cc4-86b6-d243c18a9ff8",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "d7099e72-d8da-40d2-ac7e-619110dd9052",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "a559123e-8eaa-4b8f-a7e4-56bec688ef5e",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "06f0c68f-7ae7-4f8c-884d-168932a90b7a",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "1f026f24-2b6c-42ce-88bf-420b0ecc74f3",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "timedOut": false,
      "duration": 33,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "b08d4cb9-2b03-4ca4-8c05-9a1203ab4d65",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "fullTitle": "OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "timedOut": false,
      "duration": 28,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "236f8717-8336-4c35-b737-6b302956f2dc",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "07b0055b-0df9-4d3b-a669-b18048c17fe9",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "fullTitle": "OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "497bcd13-1da3-4123-b190-cf84fdae79c5",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return result including complex type (GET /Users)",
      "fullTitle": "OData CRUD should return result including complex type (GET /Users)",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "2e9812cd-9f70-4d51-903f-4ce3a3a1459e",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return complex type property (GET /Users(1)/Location)",
      "fullTitle": "OData CRUD should return complex type property (GET /Users(1)/Location)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "dee23623-d9bc-4e1b-8982-3fea71503481",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return empty object when no public controllers on server",
      "fullTitle": "Code coverage should return empty object when no public controllers on server",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai_1.expect(index_1.odata.getPublicControllers(NoServer)).to.deep.equal({});",
      "isRoot": false,
      "uuid": "8de0c12c-aa85-4464-916b-d4901d8679f3",
      "parentUUID": "1dca2176-3987-41a8-861d-03b6982de8ee",
      "skipped": false
    },
    {
      "title": "should not allow non-OData methods",
      "fullTitle": "Code coverage should not allow non-OData methods",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}, (err) =&gt; {<br>    chai_1.expect(err.message).to.equal(<span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>});",
      "isRoot": false,
      "uuid": "07d3063c-01c0-40f5-bf9f-9bdefe6f368b",
      "parentUUID": "1dca2176-3987-41a8-861d-03b6982de8ee",
      "skipped": false
    },
    {
      "title": "should throw resource not found error",
      "fullTitle": "Code coverage should throw resource not found error",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    chai_1.expect(err.message).to.equal(<span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
      "isRoot": false,
      "uuid": "84954672-723e-494a-9ec9-45afb502dc65",
      "parentUUID": "1dca2176-3987-41a8-861d-03b6982de8ee",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should return entity set result (GET /EntitySet)",
      "fullTitle": "OData CRUD should return entity set result (GET /EntitySet)",
      "timedOut": false,
      "duration": 84,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "2c133dba-8387-4bd3-8070-e2d4b379c191",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity set result using generator function (GET /GeneratorEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using generator function (GET /GeneratorEntitySet)",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "3fa2f48c-5b35-4e17-ae0a-7d05a246c54a",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity set result using async function (GET /AsyncEntitySet)",
      "fullTitle": "OData CRUD should return entity set result using async function (GET /AsyncEntitySet)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "ac14f558-2191-49bd-a231-c68c9dd08506",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "fullTitle": "OData CRUD should return entity set result with inline count (GET /InlineCountEntitySet?$count=true)",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "1a2998dd-a22b-4100-9527-4c5f4ed86d6f",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity by key (GET /EntitySet(1))",
      "fullTitle": "OData CRUD should return entity by key (GET /EntitySet(1))",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "c8a43dd6-1e11-47c1-84ef-247553ddbedd",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should insert new entity (POST /EntitySet)",
      "fullTitle": "OData CRUD should insert new entity (POST /EntitySet)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "e676387e-7b0c-4c94-997f-a92054370069",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should update entity (PUT /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity (PUT /EntitySet(1))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "708e0b25-7929-4141-839a-6d1141d7a634",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should update entity using delta (PATCH /EntitySet(1))",
      "fullTitle": "OData CRUD should update entity using delta (PATCH /EntitySet(1))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "322c3cee-3e8c-4142-9b53-3e6d287867bb",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should delete entity (DELETE /EntitySet(1))",
      "fullTitle": "OData CRUD should delete entity (DELETE /EntitySet(1))",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "ac2c3feb-b669-4fa1-a992-a87256f286fb",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return result count (GET /EntitySet/$count)",
      "fullTitle": "OData CRUD should return result count (GET /EntitySet/$count)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "9ba041a4-0aba-400c-9aac-dd846b9475d6",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity property (GET /EntitySet(1)/foo)",
      "fullTitle": "OData CRUD should return entity property (GET /EntitySet(1)/foo)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "e11882eb-16a8-456d-a151-5b9d0cb25b39",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity property value (GET /EntitySet(1)/foo/$value)",
      "fullTitle": "OData CRUD should return entity property value (GET /EntitySet(1)/foo/$value)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "009eacef-cab9-499d-b141-f936bcc266fe",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity value (GET /EntitySet(1)/$value)",
      "fullTitle": "OData CRUD should return entity value (GET /EntitySet(1)/$value)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "0acbee9d-01ec-4689-bef0-8466a5dc4bea",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call action import (POST /ActionImport)",
      "fullTitle": "OData CRUD should call action import (POST /ActionImport)",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "c15c39e0-039e-4f06-a20f-71a60c9ee9f9",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call function import (GET /FunctionImport(value=42))",
      "fullTitle": "OData CRUD should call function import (GET /FunctionImport(value=42))",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "39f54840-c341-49b5-aff1-9135bab847b2",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call function import using parameter alias (GET /FunctionImport(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "4baabd39-4d4c-4f3f-881a-5e0d66596181",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /FunctionImportMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "9e3fa11c-2eff-4458-a04a-d320bc70106e",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /FunctionImportMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "905785d6-01c7-4a75-bffa-fbee98f2372d",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /FunctionImportMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "ee2617fd-0706-46fb-9704-4d45fe5fb953",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "fullTitle": "OData CRUD should call bound collection action (POST /BoundOperationEntitySet/Default.Action)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "6b0529a5-9cda-43c9-b2ee-460f9ea3a0b2",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "fullTitle": "OData CRUD should call bound entity action (POST /BoundOperationEntitySet(1)/Default.Foo)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "822481d4-89ab-4b70-b6cb-5aca66c2bb04",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "fullTitle": "OData CRUD should call bound collection function (GET /BoundOperationEntitySet/Default.Function(value=42))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "fc6faf3f-e6ed-4c6f-b263-cc08334c9961",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "fullTitle": "OData CRUD should call bound entity function (GET /BoundOperationEntitySet(1)/Default.Bar())",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "2ba71986-a4da-4dd0-8a94-bee403e37694",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "fullTitle": "OData CRUD should call bound entity function with parameter (GET /BoundOperationEntitySet(1)/Echo.echo(message='my message'))",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "9b7be7d1-ab33-4261-81e8-e915db8bab66",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "fullTitle": "OData CRUD should call bound collection function using parameter alias (GET /BoundOperationEntitySet/Default.Function(value=@value)?@value=42)",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "e3802090-6c07-4538-b6e6-437f7b23bfcb",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (GET /BoundOperationEntitySet/Default.FunctionMore(value=42,message='hello world'))",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "6ed84cdb-2750-4c6e-909f-3e8abf1932e9",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "fullTitle": "OData CRUD should call function import with multiple parameters using parameter alias (GET /BoundOperationEntitySet/Default.FunctionMore(value=@value,message=@message)?@value=42&@message='hello world')",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "cc994f6f-f711-48cf-b8a6-6ecdc119766d",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "fullTitle": "OData CRUD should call function import with multiple parameters (different ordering) (GET /BoundOperationEntitySet/Default.FunctionMore(message='hello world',value=42))",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "bbedabdf-8143-45dd-9ba0-4103ccabdc9d",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products)",
      "timedOut": false,
      "duration": 33,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "35d76ec7-1814-457c-ba69-45b190702121",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "fullTitle": "OData CRUD should return entity collection navigation property result with filter (GET /Categories('578f2baa12eaebabec4af289')/Products?$filter=Name eq 'Chai')",
      "timedOut": false,
      "duration": 28,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "cf15787f-7ed0-4cc1-a145-eeb0477aa47b",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "fullTitle": "OData CRUD should return entity collection navigation property result (GET /Categories('578f2baa12eaebabec4af289')/Products('578f2b8c12eaebabec4af23c'))",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "4680fa71-0dc0-41ca-a29c-1a8dd29b85a6",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "fullTitle": "OData CRUD should return entity navigation property result (GET /Products('578f2b8c12eaebabec4af23c')/Category)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "466d8b9d-9601-4f08-9a28-77630ecc8627",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return result including complex type (GET /Users)",
      "fullTitle": "OData CRUD should return result including complex type (GET /Users)",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "10e35893-60b6-4761-b00d-ee49071ea0ff",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return complex type property (GET /Users(1)/Location)",
      "fullTitle": "OData CRUD should return complex type property (GET /Users(1)/Location)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> test = command.split(<span class=\"hljs-string\">\" \"</span>);<br><span class=\"hljs-keyword\">return</span> server.execute(test.slice(<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">\" \"</span>), test[<span class=\"hljs-number\">0</span>], body).then((result) =&gt; {<br>    assert.deepEqual(result, compare);<br>});",
      "isRoot": false,
      "uuid": "7b5c7d5f-e44e-486e-8586-1ba31223bbfb",
      "parentUUID": "4624656c-9d09-4413-bc79-2fea846272a8",
      "skipped": false
    },
    {
      "title": "should return empty object when no public controllers on server",
      "fullTitle": "Code coverage should return empty object when no public controllers on server",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai_1.expect(index_1.odata.getPublicControllers(NoServer)).to.deep.equal({});",
      "isRoot": false,
      "uuid": "d90b9acd-d6ae-4d8c-97ed-eb8497f570d2",
      "parentUUID": "1dca2176-3987-41a8-861d-03b6982de8ee",
      "skipped": false
    },
    {
      "title": "should not allow non-OData methods",
      "fullTitle": "Code coverage should not allow non-OData methods",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> NoServer.execute(<span class=\"hljs-string\">\"/dev/null\"</span>, <span class=\"hljs-string\">\"MERGE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"MERGE should not be allowed\"</span>);<br>}, (err) =&gt; {<br>    chai_1.expect(err.message).to.equal(<span class=\"hljs-string\">\"Method not allowed.\"</span>);<br>});",
      "isRoot": false,
      "uuid": "f7cee6f6-c6a7-4ca0-98e9-3710d0d1b9b1",
      "parentUUID": "1dca2176-3987-41a8-861d-03b6982de8ee",
      "skipped": false
    },
    {
      "title": "should throw resource not found error",
      "fullTitle": "Code coverage should throw resource not found error",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> AuthenticationServer.execute(<span class=\"hljs-string\">\"/Users\"</span>, <span class=\"hljs-string\">\"DELETE\"</span>).then(() =&gt; {<br>    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">\"should throw error\"</span>);<br>}, (err) =&gt; {<br>    chai_1.expect(err.message).to.equal(<span class=\"hljs-string\">\"Resource not found.\"</span>);<br>});",
      "isRoot": false,
      "uuid": "762c8508-536c-4a2f-b1c7-fd66563f3406",
      "parentUUID": "1dca2176-3987-41a8-861d-03b6982de8ee",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}